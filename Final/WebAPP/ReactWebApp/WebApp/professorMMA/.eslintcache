[{"/home/roroblacc/Project/arch-development/src/reportWebVitals.js":"1","/home/roroblacc/Project/arch-development/src/index.js":"2","/home/roroblacc/Project/arch-development/src/components/App.js":"3","/home/roroblacc/Project/arch-development/src/components/ui/Header.js":"4","/home/roroblacc/Project/arch-development/src/components/ui/Theme.js":"5","/home/roroblacc/Project/arch-development/src/components/ui/Footer.js":"6","/home/roroblacc/Project/arch-development/src/components/ui/LandingPage.js":"7","/home/roroblacc/Project/arch-development/src/animations/landinganimation/data.js":"8","/home/roroblacc/Project/arch-development/src/components/ui/ButtonArrow.js":"9","/home/roroblacc/Desktop/FYP/NEWFYP/ProfessorM.M.A/ReactWebApp/WebApp/arch-development/src/index.js":"10","/home/roroblacc/Desktop/FYP/NEWFYP/ProfessorM.M.A/ReactWebApp/WebApp/arch-development/src/components/App.js":"11","/home/roroblacc/Desktop/FYP/NEWFYP/ProfessorM.M.A/ReactWebApp/WebApp/arch-development/src/components/ui/Header.js":"12","/home/roroblacc/Desktop/FYP/NEWFYP/ProfessorM.M.A/ReactWebApp/WebApp/arch-development/src/components/ui/fighterPage.js":"13","/home/roroblacc/Desktop/FYP/NEWFYP/ProfessorM.M.A/ReactWebApp/WebApp/arch-development/src/components/ui/Theme.js":"14","/home/roroblacc/Desktop/FYP/NEWFYP/ProfessorM.M.A/ReactWebApp/WebApp/arch-development/src/components/ui/statistics.js":"15","/home/roroblacc/Desktop/FYpDeploytest/ReactWebApp/WebApp/arch-development/src/index.js":"16","/home/roroblacc/Desktop/FYpDeploytest/ReactWebApp/WebApp/arch-development/src/components/App.js":"17","/home/roroblacc/Desktop/FYpDeploytest/ReactWebApp/WebApp/arch-development/src/components/ui/Theme.js":"18","/home/roroblacc/Desktop/FYpDeploytest/ReactWebApp/WebApp/arch-development/src/components/ui/Header.js":"19","/home/roroblacc/Desktop/FYpDeploytest/ReactWebApp/WebApp/arch-development/src/components/ui/fighterPage.js":"20","/home/roroblacc/Desktop/FYpDeploytest/ReactWebApp/WebApp/arch-development/src/components/ui/statistics.js":"21"},{"size":362,"mtime":1612253795555,"results":"22","hashOfConfig":"23"},{"size":422,"mtime":1612331762821,"results":"24","hashOfConfig":"25"},{"size":1818,"mtime":1614770618788,"results":"26","hashOfConfig":"25"},{"size":12979,"mtime":1617798273350,"results":"27","hashOfConfig":"25"},{"size":1463,"mtime":1615410470977,"results":"28","hashOfConfig":"25"},{"size":5962,"mtime":1614603910260,"results":"29","hashOfConfig":"25"},{"size":5696,"mtime":1615412526741,"results":"30","hashOfConfig":"25"},{"size":3891,"mtime":1614770371251,"results":"31","hashOfConfig":"25"},{"size":368,"mtime":1614775508210,"results":"32","hashOfConfig":"25"},{"size":422,"mtime":1618694114914,"results":"33","hashOfConfig":"34"},{"size":967,"mtime":1618694114901,"results":"35","hashOfConfig":"34"},{"size":7287,"mtime":1619194245063,"results":"36","hashOfConfig":"34"},{"size":18523,"mtime":1619263095046,"results":"37","hashOfConfig":"34"},{"size":1477,"mtime":1618694114914,"results":"38","hashOfConfig":"34"},{"size":18737,"mtime":1618694114914,"results":"39","hashOfConfig":"34"},{"size":422,"mtime":1618694114914,"results":"40","hashOfConfig":"41"},{"size":967,"mtime":1618694114901,"results":"42","hashOfConfig":"41"},{"size":1477,"mtime":1618694114914,"results":"43","hashOfConfig":"41"},{"size":7287,"mtime":1619194245063,"results":"44","hashOfConfig":"41"},{"size":18502,"mtime":1619266244025,"results":"45","hashOfConfig":"41"},{"size":18737,"mtime":1618694114914,"results":"46","hashOfConfig":"41"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k3hiak",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sg7p40",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"nsppnr",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"67"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"67"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"67"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wm4v15",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/roroblacc/Project/arch-development/src/reportWebVitals.js",[],"/home/roroblacc/Project/arch-development/src/index.js",[],"/home/roroblacc/Project/arch-development/src/components/App.js",[],"/home/roroblacc/Project/arch-development/src/components/ui/Header.js",[],"/home/roroblacc/Project/arch-development/src/components/ui/Theme.js",["93"],"/home/roroblacc/Project/arch-development/src/components/ui/Footer.js",[],"/home/roroblacc/Project/arch-development/src/components/ui/LandingPage.js",["94"],"/home/roroblacc/Project/arch-development/src/animations/landinganimation/data.js",["95"],"/home/roroblacc/Project/arch-development/src/components/ui/ButtonArrow.js",[],"/home/roroblacc/Desktop/FYP/NEWFYP/ProfessorM.M.A/ReactWebApp/WebApp/arch-development/src/index.js",[],["96","97"],"/home/roroblacc/Desktop/FYP/NEWFYP/ProfessorM.M.A/ReactWebApp/WebApp/arch-development/src/components/App.js",[],"/home/roroblacc/Desktop/FYP/NEWFYP/ProfessorM.M.A/ReactWebApp/WebApp/arch-development/src/components/ui/Header.js",["98","99","100"],"  import React, { useState, useEffect } from 'react'\n  import { AppBar } from '@material-ui/core'\n  import { Toolbar } from '@material-ui/core'\n  // import { Typography } from '@material-ui/core'\n  import useScrollTrigger from '@material-ui/core/useScrollTrigger';\n  import { makeStyles } from '@material-ui/styles'\n  import logo from '../imgs/logo.svg'\n  import { Tabs, Tab } from '@material-ui/core'\n  import { Button } from '@material-ui/core'\n  import { Link } from 'react-router-dom'\n  import { Menu, MenuItem } from '@material-ui/core'\n  import {useMediaQuery}  from '@material-ui/core'\n  import {useTheme}  from '@material-ui/core'\n  import  {SwipeableDrawer} from  '@material-ui/core'\n  import MenuIcon from '@material-ui/icons/Menu'\n  import {IconButton} from '@material-ui/core'\n  import {List,ListItem,ListItemText} from '@material-ui/core'\n  import Slide from '@material-ui/core/Slide';\n\n\n\n\n  function HideOnScroll(props) {\n    const { children} = props;\n\n    const trigger = useScrollTrigger();\n\n    return (\n      <Slide appear={false} direction=\"down\" in={!trigger}>\n        {children}\n      </Slide>\n    );\n  }\n\n\n  const useStyle = makeStyles(theme => ({\n    toolbarMargin: {\n      ...theme.mixins.toolbar,\n      marginBottom: \"2em\",\n      [theme.breakpoints.down(\"xs\")]:{\n        marginBottom: \"1.5em\",\n\n      },\n    },\n    logo: {\n      // height:\"100px\",\n      width: \"3em\",\n      [theme.breakpoints.down(\"md\")]:{\n        height: \"3em\",\n        width: \"7em\",\n      },\n      [theme.breakpoints.down(\"xs\")]:{\n        height: \"5.5em\",\n        width: \"19em\",\n\n      },\n\n    },\n    tabContainer: {\n      marginRight: \"auto\"\n    },\n    tab: {\n      ...theme.typography.tab,\n      minWidth: 10,\n      marginLeft: \"25px\",\n    },\n    futureLogo: {\n      ...theme.typography.estimate,\n      borderRadius: \"50px\",\n      marginLeft: \"50px\",\n      marginRight: \"25px\",\n      height: \"45px\",\n      color: \"white\"\n    },\n    logoContainer: {\n      padding: 0,\n      \"&:hoover\": {\n        backgroundColor: \"transparent\"\n      }\n    },\n    menu:{\n      backgroundColor: theme.palette.common.arcBlue,\n      color:\"white\",\n    },\n    MenuItem :{\n      ...theme.typography.tab,\n      color:'green',\n      opacity:1,\n      \"&:hover\":{\n        opacity:1,\n      }\n    },\n    drawerIcon:{\n      height:\"45px\",\n      width:\"45px\",\n    },\n\n    drawerIconContainer:{\n      \"&:hover\":{\n        backgroundColor:\"transparent\"\n      },\n      marginRight: \"auto\",\n    },\n    drawer: {\n      backgroundColor: theme.palette.common.black,\n\n    },\n    drawerItem:{\n      ...theme.typography.tab,\n      color:\"white\",\n      opacity: 0.7,\n    },\n    drawerItemSelected:{\n      \"& .MuiListItemText-root\":{\n            color:\"green\",\n        opacity: 1}\n    },\n    drawerItemEstimate:{\n      backgroundColor: theme.palette.common.arcOrange,\n\n    },\n\n  }));\n\n\n  function Header(props) {\n    const classes = useStyle();\n    const theme  = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.down(\"md\"));\n    const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n\n    // use state explain\n    const [openDrawer, setOpenDrawer] = useState(false)\n\n\n\n    // Reload function & tracking\n\n      const handleChange = (e ,value) => {\n      props.setValue(value)\n    }\n    //gets the url and see if it matches\n    switch(window.location.pathname){\n      case \"/\":\n        if (props.value !==0){\n         props.setValue(0)\n        }\n        break;\n      case \"/Project\":\n        if (props.value !==1){\n         props.setValue(1)\n\n        }\n      break;\n\n      case \"/chart\":\n        if (props.value !==2){\n          props.setValue(2)\n        }\n      break;\n      case \"/contact\":\n          if (props.value !==3){\n         props.setValue(3)\n        }\n      break;\n\n      default:\n        break;\n\n    }\n\n\n\n    const tabs = (\n      <React.Fragment>\n        <Tabs value={ props.value} onChange={handleChange} className={classes.tabContainer} indicatorColor=\"secondary\">\n             <Tab  className={classes.tab} component={Link}   to=\"/\" label=\"Home\" />\n             <Tab className={classes.tab} component={Link}  to=\"/Project\" label=\"ProfessorM.M.A\" />\n             <Tab className={classes.tab} component={Link} to=\"/chart\" label=\"Player Statistics\" />\n             <Tab className={classes.tab} component={Link} to=\"/contact\" label=\"Contact\" />\n        </Tabs>\n      </React.Fragment>\n\n    )\n\n    const drawer = (\n      <React.Fragment>\n          <SwipeableDrawer classes ={{paper: classes.drawer}} disableBackdropTransition={!iOS} disableDiscovery={iOS} open ={openDrawer} onClose={() => {setOpenDrawer(false);  props.setValue(0)}} onOpen ={() => setOpenDrawer(true)} >\n            <div className={classes.toolbarMargin}/>\n            <List disablePadding>\n              <ListItem  key = { props.value} onClick={() =>{ setOpenDrawer(false);  props.setValue(0) }} divider button component= {Link} to =\"/\" selected = { props.value === 0} classes ={{selected: classes.drawerItemSelected}}>\n                <ListItemText className = {classes.drawerItem} disableTypography>\n                    Home\n                </ListItemText>\n              </ListItem>\n\n              <ListItem  key = { props.value}  onClick={() => {setOpenDrawer(false);  props.setValue(1)}} divider button component= {Link} to =\"/Project\" selected = { props.value === 1} classes ={{selected: classes.drawerItemSelected}}>\n                <ListItemText className = {classes.drawerItem} disableTypography>\n                  Professor M.M.A\n                </ListItemText>\n              </ListItem>\n\n              <ListItem key = { props.value}  onClick={() => {setOpenDrawer(false);  props.setValue(2)}}  divider button component= {Link} to =\"/chart\" selected = { props.value === 2} classes ={{selected: classes.drawerItemSelected}}>\n                <ListItemText className = {classes.drawerItem} disableTypography>\n                  Player Statistics\n                </ListItemText>\n              </ListItem>\n\n\n              <ListItem key = { props.value}  onClick={() => {setOpenDrawer(false);  props.setValue(4)}}  divider button  component= {Link} to =\"/contact\" selected = { props.value === 3} classes ={{selected: classes.drawerItemSelected}}>\n                <ListItemText className = {classes.drawerItem} disableTypography>\n                    Contact\n                </ListItemText>\n              </ListItem>\n\n\n            </List>\n\n          </SwipeableDrawer>\n          <IconButton className={classes.drawerIconContainer} onClick={() => setOpenDrawer (!openDrawer)} disableRipple>\n              <MenuIcon className ={classes.drawerIcon}/>\n          </IconButton>\n      </React.Fragment>\n\n    )\n\n    return (\n      <React.Fragment>\n        <HideOnScroll {...props}>\n          <AppBar position=\"fixed\" >\n            <Toolbar disableGutters>\n\n              {matches ? drawer : tabs}\n              <Button component={Link} to=\"/\" className={classes.logoContainer} onClick={() =>  props.setValue(0)} disableRipple>\n                <img src={logo} alt=\"Logo\" className={classes.logo} />\n              </Button>\n            </Toolbar>\n          </AppBar>\n        </HideOnScroll>\n         <Toolbar />\n        <div className={classes.toolbarMargin}></div>\n      </React.Fragment>\n    )\n\n  }\n\n\n\n\n  export default Header;\n","/home/roroblacc/Desktop/FYP/NEWFYP/ProfessorM.M.A/ReactWebApp/WebApp/arch-development/src/components/ui/fighterPage.js",["101","102","103","104","105","106","107"],"/home/roroblacc/Desktop/FYP/NEWFYP/ProfessorM.M.A/ReactWebApp/WebApp/arch-development/src/components/ui/Theme.js",["108"],"import { orange } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst silkwhite =\"#FFFFFF\";\nconst arcOrange = \"#FFBA60\";\nconst arcGrey = \"#868686\"\n\nexport default createMuiTheme({\n    palette:{\n        common:{\n            arcBlue: `${silkwhite}`,\n            arcOrange: `${arcOrange}`,\n            black: \"black\",\n            orange:\"orange\"\n        },\n        primary:{\n            main: `${silkwhite}`\n        },\n        secondary:{\n            main: `${arcOrange}`\n\n        }\n    },\n    typography:{\n        tab:{\n            fontFamily: \"Raleway\",\n            textTransform: \"none\",\n            fontWeight:700,\n            fontSize: \"1rem\",\n         \n        },\n        estimate: {\n            fontFamily:\"Pacifico\",\n            fontSize:\"1rem\",\n            textTransform:\"none\",\n        },\n        h2:{\n            fontFamily:\"Raleway\",\n            fontWeight: 700,\n            fontSize: \"2.5rem\",\n            color:`${silkwhite}`,\n            lineHeight: 1.5\n\n        },\n        h3:{\n            fontFamily:\"Pacifico\",\n            fontSize: \"2.5rem\",\n            color:`${silkwhite}`,\n        },\n        h4:{\n            fontFamily:\"Raleway\",\n            fontWeight: 700,\n            fontSize: \"1.75rem\",\n            color:`${silkwhite}`,\n        },\n        subtitle1:{\n            fontFamily:\"Raleway\",\n            fontWeight: 400,\n            fontSize: \"1.25rem\",\n            color:`${arcGrey}`,\n        },\n    }\n    \n})\n","/home/roroblacc/Desktop/FYP/NEWFYP/ProfessorM.M.A/ReactWebApp/WebApp/arch-development/src/components/ui/statistics.js",["109","110","111","112","113","114","115","116"],"/* eslint-disable no-use-before-define */\nimport React,{useEffect,useState} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport axios from 'axios'\nimport FighterData from '../Data/fighterDataset.json'\nimport { Button } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box'\n// import { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip} from 'recharts';\nimport {\n  BarChart,\n  Bar,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ReferenceLine,\n} from 'recharts';\n\nimport { Radar, RadarChart, PolarGrid, Legend, PolarAngleAxis, PolarRadiusAxis, ResponsiveContainer } from 'recharts';\nimport Chip from '@material-ui/core/Chip';\n\n\n\n\n\n      // abstract Grid\n\n     const Grids = (props) => <Grid container {...props} />\n     const GridCol = (props) => <Grid container direction ='column'{...props} />\n     const GridRow = (props) => <Grid container direction ='row'{...props} />\n     const Item = (props) => <Grid item {...props} />\n\n\n\n\nconst useStyle = theme => ({\n  toolbarMargin: {\n    ...theme.mixins.toolbar,\n    marginBottom: \"1em\",\n    [theme.breakpoints.down(\"xs\")]:{\n      marginBottom: \"1.5em\",\n\n    },\n  },\n  logo: {\n    // height:\"100px\",\n    width: \"16em\",\n    [theme.breakpoints.down(\"md\")]:{\n      height: \"5em\",\n      width: \"17em\",\n    },\n    [theme.breakpoints.down(\"xs\")]:{\n      height: \"5.5em\",\n      width: \"19em\",\n\n    },\n\n  },\n  paper:{\n     display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n       marginTop:theme.spacing(200),\n      margin: theme.spacing(30),\n      width: theme.spacing(300),\n      height: theme.spacing(16)\n    }\n  },\n   root: {\n      backgroundColor: '#FAFAFA',\n    minWidth: 200,\n     minHeight:300,\n  },\n  Win: {\n      backgroundColor: '#BCE6DA',\n    minWidth: 200,\n     minHeight:300,\n  },\n Loss: {\n  backgroundColor:'#F0A89C',\nminWidth: 200,\n minHeight:300,\n},\n    draw:{\n        backgroundColor: '#F0E79C',\n        minWidth: 200,\n        minHeight:300,\n\n    },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\n\n\n\n\n\nclass Statistics extends React.PureComponent {\nconstructor(props){\n    super(props)\n    this.state = {\n      selectOptionsNames : [],\n      height: [],\n      DOB:[],\n      SApM:[],\n      SLpM:[],\n      REACH:[],\n      STANCE:[],\n      WEIGHT:[],\n      strikeAccuracy:[],\n      strDef:[],\n      tdAcc:[],\n      subAvg:[],\n      tdDef:[],\n      tdAvg:[],\n      FighterA:[],\n      FighterB:[],\n      Response:false,\n      Response1:false,\n      Favourite: '',\n      UnderDog: '',\n      favWin:false,\n      undWin:false,\n      draw:false,\n      chart:[],\n      charttwo:[],\n      radarB:false,\n\n      // fixedOptions:[\"hello\"],\n      // value:[...this.fixedOptions, this.FighterA]\n    }\n    this.getFighterA = this.getFighterA.bind(this);\n\n  }\n\n\n  async getOptions(){\n    const res = await axios.get('http://127.0.0.1:5000/static/fighterDataset2.json')\n    const data = res.data\n    const nameData =[]\n    const heightData =[]\n    const StrikeAcc =[]\n    const DOB =[]\n    const SApM =[]\n    const SLpM =[]\n    const REACH =[]\n    const STANCE =[]\n    const WEIGHT =[]\n    const strDef =[]\n    const tdAcc =[]\n    const subAvg =[]\n    const tdDef =[]\n    const tdAvg =[]\n\n\n    for(let i =0; i< 6000 ;i++){\n      // console.log(FighterData.Name[i])\n      if (FighterData.Name[i] !== undefined){\n        nameData.push({ \"Name\" : FighterData.Name[i]})\n        heightData.push({\"Height\": FighterData.HEIGHT[i]})\n        StrikeAcc.push({\"StrAcc\": FighterData[\"Str. Acc..\"][i]})\n        DOB.push({\"DOB\":FighterData.DOB[i]})\n        SApM.push({\"SApM\":FighterData.SApM[i]})\n        SLpM.push({\"SLpM\":FighterData.SLpM[i]})\n        REACH.push({\"REACH\":FighterData.REACH[i]})\n        STANCE.push({\"STANCE\":FighterData.STANCE[i]})\n        WEIGHT.push({\"WEIGHT\":FighterData.WEIGHT[i]})\n        strDef.push({\"strDef\":FighterData[\"Str. Def\"][i]})\n        tdAcc.push({\"tdAcc\":FighterData[\"TD Acc\"][i]})\n        subAvg.push({\"subAvg\":FighterData[\"Sub. Avg\"][i]})\n        tdDef.push({\"tdDef\":FighterData[\"TD Def.\"][i]})\n        tdAvg.push({\"tdAvg\":FighterData[\"TD Avg\"][i]})\n\n\n      }\n    }\n\n    this.setState({selectOptionsNames: nameData})\n    this.setState({height: heightData})\n    this.setState({strikeAccuracy: StrikeAcc})\n    this.setState({DOB: DOB})\n    this.setState({SLpM: SLpM})\n    this.setState({REACH: REACH})\n    this.setState({STANCE: STANCE})\n    this.setState({WEIGHT: WEIGHT})\n    this.setState({strDef: strDef})\n    this.setState({tdAcc: tdAcc})\n    this.setState({subAvg: subAvg})\n    this.setState({tdDef: tdDef})\n    this.setState({tdAvg: tdAvg})\n    this.setState({SApM: SApM})\n\n\n\n\n  }\n    componentDidMount(){\n      this.getOptions()\n  }\n\n\n\n  getFighterA(param){\n    const indexA = this.state.selectOptionsNames.indexOf(param);\n    const FighterA=[]\n    let radar_one = []\n\n\n         const convertRange =( value, min , max) => {\n\n                for (let i = 0; i < value[0].length; i++)\n                {\n                    if(max - min === 0) return 1;\n                    value[0][i] = (value[0][i] - min) / (max - min);\n\n                }\n                return value[0];\n            };\n\n\n    if(indexA !== -1 ){\n      // this.setState({FighterA:[]}) // reset array before setting new data\n      FighterA.push(this.state.selectOptionsNames[indexA].Name)\n      FighterA.push(this.state.height[indexA].Height)\n      FighterA.push(this.state.WEIGHT[indexA].WEIGHT)\n      FighterA.push(this.state.REACH[indexA].REACH)\n      FighterA.push(this.state.STANCE[indexA].STANCE)\n      FighterA.push(this.state.DOB[indexA].DOB)\n      FighterA.push(this.state.SLpM[indexA].SLpM)\n      FighterA.push(this.state.strikeAccuracy[indexA].StrAcc)\n      FighterA.push(this.state.SApM[indexA].SApM)\n      FighterA.push(this.state.strDef[indexA].strDef)\n      FighterA.push(this.state.tdAvg[indexA].tdAvg)\n      FighterA.push(this.state.tdAcc[indexA].tdAcc)\n      FighterA.push(this.state.tdDef[indexA].tdDef)\n      FighterA.push(this.state.subAvg[indexA].subAvg)\n\n       radar_one.push(FighterA.slice(1,2).concat(FighterA.slice(3 ,4)).concat(FighterA.slice(6,13)));\n        console.log(\"radarone \" ,radar_one)\n        radar_one[0][0] = radar_one[0][0] * 30\n        radar_one[0][2] = radar_one[0][2] * 10\n        radar_one[0][4] = radar_one[0][4] * 10\n        radar_one[0][6] = radar_one[0][6] * 10\n\n            let chart = convertRange(radar_one ,2 ,10)\n            this.setState({chart:chart});\n\n\n    }else{\n            this.setState({chart:radar_one});\n            this.setState({FighterB:FighterA});\n    }\n\n    // console.log(\"Chart\",chart)\n    this.setState({FighterA:FighterA})\n    this.setState({Response:false});\n    this.setState({undWin:false});\n    this.setState({draw:false});\n  }\n\n    getFighterB(param){\n    const indexB = this.state.selectOptionsNames.indexOf(param);\n    const FighterB=[]\n    let radar_two = []\n\n     const convertRange =( value, min , max) => {\n\n            for (let i = 0; i < value[0].length; i++)\n            {\n                if(max - min === 0) return 1;\n                value[0][i] = (value[0][i] - min) / (max - min);\n\n            }\n            return value[0];\n        };\n\n    if(indexB!== -1 ){\n      // this.setState({FighterB:[]}) // reset array before setting new data\n      FighterB.push(this.state.selectOptionsNames[indexB].Name)\n      FighterB.push(this.state.height[indexB].Height)\n      FighterB.push(this.state.WEIGHT[indexB].WEIGHT)\n      FighterB.push(this.state.REACH[indexB].REACH)\n      FighterB.push(this.state.STANCE[indexB].STANCE)\n      FighterB.push(this.state.DOB[indexB].DOB)\n      FighterB.push(this.state.SLpM[indexB].SLpM)\n      FighterB.push(this.state.strikeAccuracy[indexB].StrAcc)\n      FighterB.push(this.state.SApM[indexB].SApM)\n      FighterB.push(this.state.strDef[indexB].strDef)\n      FighterB.push(this.state.tdAvg[indexB].tdAvg)\n      FighterB.push(this.state.tdAcc[indexB].tdAcc)\n      FighterB.push(this.state.tdDef[indexB].tdDef)\n      FighterB.push(this.state.subAvg[indexB].subAvg)\n\n\n        radar_two.push(FighterB.slice(1,2).concat(FighterB.slice(3 ,4)).concat(FighterB.slice(6,13)));\n        console.log(\"Radar Two \" ,radar_two)\n        radar_two[0][0] = radar_two[0][0] * 30\n        radar_two[0][2] = radar_two[0][2] * 10\n        radar_two[0][4] = radar_two[0][4] * 10\n        radar_two[0][6] = radar_two[0][6] * 10\n\n            let chart = convertRange(radar_two ,2 ,10)\n            this.setState({charttwo:chart});\n\n    }\n    else{\n            this.setState({charttwo:radar_two});\n            this.setState({FighterB:FighterB});\n    }\n\n        this.setState({FighterB:FighterB});\n\n\n  }\n\n\n     // const Grids = (props) => <Grid container {...props} />\n     // const GridCol = (props) => <Grid container direction ='column'{...props} />\n     // const GridRow = (props) => <Grid container direction ='row'{...props} />\n     // const Item = (props) => <Grid item {...props} />\n\n\n  render(){\n    const { classes } = this.props;\n    const bull = <span className={classes.bullet}>•</span>;\n    const data = [\n  {\n    subject: 'HEIGHT',\n    A: this.state.chart[0],\n    B: this.state.charttwo[0],\n    fullMark: 20,\n  },\n\n  {\n    subject: 'REACH',\n    A: this.state.chart[1],\n    B: this.state.charttwo[1],\n    fullMark: 10,\n  },\n  {\n    subject: 'Strike Landed Per Min',\n    A: this.state.chart[2],\n    B: this.state.charttwo[2],\n    fullMark: 10,\n  },\n  {\n    subject: 'Strike Acc',\n    A: this.state.chart[3],\n    B: this.state.charttwo[3],\n    fullMark: 10,\n  },\n  {\n    subject: 'Strike Absorbed Per Min',\n    A: this.state.chart[4],\n    B: this.state.charttwo[4],\n    fullMark: 10,\n  },\n {\n    subject: 'Strike Def',\n    A: this.state.chart[5],\n    B: this.state.charttwo[5],\n    fullMark: 10,\n  },\n {\n    subject: 'Takedown Avg',\n    A: this.state.chart[6],\n    B: this.state.charttwo[6],\n    fullMark: 10,\n  }, {\n    subject: 'Takedown Acc',\n    A: this.state.chart[7],\n    B: this.state.charttwo[7],\n    fullMark: 10,\n  }, {\n    subject: 'Takedown Def',\n    A: this.state.chart[8],\n    B: this.state.charttwo[8],\n    fullMark: 10,\n  },\n  //       {\n  //   subject: 'Submission Avg',\n  //   A: this.state.chart[8],\n  //   B: 0,\n  //   fullMark: 10,\n  // },\n\n];\n\n    return (\n\n    <React.Fragment>\n       <Box p={5}>\n           <GridRow>\n               <GridRow  >\n\n                      <GridRow spacing={10}>\n\n                                <GridRow xs={6} justify=\"flex-end\" alignItems=\"center\">\n                                    <Item styles={{marginLeft:2000}}>\n\n\n                                      <Box p={1.5}>\n                                          <Paper  styles={classes.paper}>\n\n                                             <Autocomplete\n                                              id=\"FighterA\"\n                                              options={this.state.selectOptionsNames}\n                                              getOptionLabel={(option) => option.Name}\n                                              style={{ width: 500 }}\n                                              onChange={(event, value) => this.getFighterA(value)} // sends Index of selected Item Fighter A\n                                              renderInput={(params ) => <TextField {...params}  label=\"Fighters\" variant=\"outlined\" />}\n                                            />\n\n                                        </Paper>\n                                      </Box>\n                                    </Item>\n                                </GridRow>\n\n\n                                <GridRow xs={6}  justify=\"flex-start\" alignItems=\"center\" >\n                                    <Item >\n\n\n                                          <Box p={1.5}>\n                                              <Paper  styles={classes.paper}>\n\n                                                 <Autocomplete\n                                                  id=\"FighterB\"\n                                                  options={this.state.selectOptionsNames}\n                                                  getOptionLabel={(option) => option.Name}\n                                                  style={{ width: 500 }}\n                                                  onChange={(event, value) => this.getFighterB(value)} // sends Index of selected Item Fighter A\n                                                  renderInput={(params ) => <TextField {...params}  label=\"Fighters\" variant=\"outlined\" />}\n                                                />\n\n                                            </Paper>\n                                          </Box>\n                                    </Item>\n                                </GridRow>\n                      </GridRow>\n                </GridRow>\n           </GridRow>\n\n           <GridCol>\n\n                  <Box p={15}>\n                      <Item xs={12} lg={12}>\n                               <GridCol  justify=\"center\" alignItems=\"center\">\n                                   <Item>\n                                        <Card elevation={3} className={this.state.Response1?  this.state.draw ?  classes.draw : this.state.undWin ? classes.Win: classes.Loss : classes.root}>\n                                    <CardActionArea>\n                                        <CardActions>\n                                            <CardContent>\n                                                <Typography variant=\"h7\" component=\"h1\">\n                                                   Radar Chart\n                                                 </Typography>\n\n                                            </CardContent>\n                                        </CardActions>\n                                         <GridRow justify=\"center\" alignItems=\"center\">\n                                        <Item xs={12}>\n                                             <ResponsiveContainer width={1200} height={500}>\n                                                <RadarChart cx=\"50%\" cy=\"45%\" outerRadius=\"85%\" data={data}>\n                                                  <PolarGrid />\n                                                  <PolarAngleAxis dataKey=\"subject\" />\n                                                  <PolarRadiusAxis angle={40} domain={[0, 10]} />\n                                                  <Radar name={this.state.FighterA[0]} dataKey=\"A\" stroke=\"#fc9992\" fill=\"#fc9992\" fillOpacity={0.6} />\n                                                  <Radar  name={this.state.FighterB[0]} dataKey=\"B\" stroke=\"#a3eef0\" fill=\"#a3eef0\" fillOpacity={0.6} />\n                                                  <Legend />\n                                                </RadarChart>\n                                            </ResponsiveContainer>\n                                        </Item>\n                                     </GridRow>\n                                    </CardActionArea>\n                                </Card>\n                                   </Item>\n\n                               </GridCol>\n                      </Item>\n                  </Box>\n\n                  <Box p={10}>\n                      <Item xs={12} lg={12}>\n                               <GridCol  justify=\"center\" alignItems=\"center\">\n                                   <Item>\n                                        <Card  elevation={3} className={this.state.Response1?  this.state.draw ?  classes.draw : this.state.undWin ? classes.Win: classes.Loss : classes.root}>\n                                    <CardActionArea>\n                                        <CardActions>\n                                            <CardContent>\n                                                <Typography variant=\"h7\" component=\"h1\">\n                                                   Bar Chart\n                                                 </Typography>\n\n                                            </CardContent>\n                                        </CardActions>\n                                         <GridRow justify=\"center\" alignItems=\"center\">\n                                        <Item xs={12}>\n                                            <ResponsiveContainer width={1200} height={500}>\n                                                <BarChart\n                                                  width={500}\n                                                  height={300}\n                                                  data={data}\n                                                  stackOffset=\"sign\"\n                                                  margin={{\n                                                    top: 5,\n                                                    right: 30,\n                                                    left: 20,\n                                                    bottom: 5,\n                                                  }}\n                                                >\n                                                  <CartesianGrid strokeDasharray=\"3 3\" />\n                                                  <XAxis dataKey=\"subject\" />\n                                                  <YAxis />\n                                                  <Tooltip />\n                                                  <Legend />\n                                                  <ReferenceLine y={0} stroke=\"#000\" />\n                                                   <Bar dataKey=\"A\" stackId=\"a\" fill=\"#8884d8\" />\n                                                   <Bar dataKey=\"B\" stackId=\"a\" fill=\"#82ca9d\" />\n                                                </BarChart>\n                                            </ResponsiveContainer>\n                                        </Item>\n                                     </GridRow>\n                                    </CardActionArea>\n                                </Card>\n                                   </Item>\n\n                               </GridCol>\n                      </Item>\n                  </Box>\n\n\n\n            </GridCol>\n\n       </Box>\n\n    </React.Fragment>\n\n  );\n  }\n}\n\n\n\n// export default class ComboBox\nexport default withStyles(useStyle)(Statistics)\n\n","/home/roroblacc/Desktop/FYpDeploytest/ReactWebApp/WebApp/arch-development/src/index.js",[],"/home/roroblacc/Desktop/FYpDeploytest/ReactWebApp/WebApp/arch-development/src/components/App.js",[],"/home/roroblacc/Desktop/FYpDeploytest/ReactWebApp/WebApp/arch-development/src/components/ui/Theme.js",["117"],"/home/roroblacc/Desktop/FYpDeploytest/ReactWebApp/WebApp/arch-development/src/components/ui/Header.js",["118","119","120"],"/home/roroblacc/Desktop/FYpDeploytest/ReactWebApp/WebApp/arch-development/src/components/ui/fighterPage.js",["121","122","123","124","125","126","127"],"/home/roroblacc/Desktop/FYpDeploytest/ReactWebApp/WebApp/arch-development/src/components/ui/statistics.js",["128","129","130","131","132","133","134","135"],{"ruleId":"136","severity":1,"message":"137","line":1,"column":10,"nodeType":"138","messageId":"139","endLine":1,"endColumn":16},{"ruleId":"136","severity":1,"message":"140","line":13,"column":10,"nodeType":"138","messageId":"139","endLine":13,"endColumn":18},{"ruleId":"141","severity":1,"message":"142","line":7,"column":1,"nodeType":"143","endLine":191,"endColumn":3},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"136","severity":1,"message":"148","line":1,"column":29,"nodeType":"138","messageId":"139","endLine":1,"endColumn":38},{"ruleId":"136","severity":1,"message":"149","line":11,"column":12,"nodeType":"138","messageId":"139","endLine":11,"endColumn":16},{"ruleId":"136","severity":1,"message":"150","line":11,"column":18,"nodeType":"138","messageId":"139","endLine":11,"endColumn":26},{"ruleId":"136","severity":1,"message":"148","line":2,"column":15,"nodeType":"138","messageId":"139","endLine":2,"endColumn":24},{"ruleId":"136","severity":1,"message":"151","line":2,"column":25,"nodeType":"138","messageId":"139","endLine":2,"endColumn":33},{"ruleId":"136","severity":1,"message":"152","line":24,"column":12,"nodeType":"138","messageId":"139","endLine":24,"endColumn":17},{"ruleId":"136","severity":1,"message":"153","line":25,"column":12,"nodeType":"138","messageId":"139","endLine":25,"endColumn":19},{"ruleId":"136","severity":1,"message":"154","line":141,"column":11,"nodeType":"138","messageId":"139","endLine":141,"endColumn":15},{"ruleId":"136","severity":1,"message":"155","line":284,"column":12,"nodeType":"138","messageId":"139","endLine":284,"endColumn":15},{"ruleId":"136","severity":1,"message":"156","line":346,"column":13,"nodeType":"138","messageId":"139","endLine":346,"endColumn":17},{"ruleId":"136","severity":1,"message":"137","line":1,"column":10,"nodeType":"138","messageId":"139","endLine":1,"endColumn":16},{"ruleId":"136","severity":1,"message":"148","line":2,"column":15,"nodeType":"138","messageId":"139","endLine":2,"endColumn":24},{"ruleId":"136","severity":1,"message":"151","line":2,"column":25,"nodeType":"138","messageId":"139","endLine":2,"endColumn":33},{"ruleId":"136","severity":1,"message":"157","line":7,"column":10,"nodeType":"138","messageId":"139","endLine":7,"endColumn":16},{"ruleId":"136","severity":1,"message":"158","line":21,"column":3,"nodeType":"138","messageId":"139","endLine":21,"endColumn":7},{"ruleId":"136","severity":1,"message":"159","line":30,"column":8,"nodeType":"138","messageId":"139","endLine":30,"endColumn":12},{"ruleId":"136","severity":1,"message":"152","line":38,"column":12,"nodeType":"138","messageId":"139","endLine":38,"endColumn":17},{"ruleId":"136","severity":1,"message":"154","line":159,"column":11,"nodeType":"138","messageId":"139","endLine":159,"endColumn":15},{"ruleId":"136","severity":1,"message":"156","line":345,"column":11,"nodeType":"138","messageId":"139","endLine":345,"endColumn":15},{"ruleId":"136","severity":1,"message":"137","line":1,"column":10,"nodeType":"138","messageId":"139","endLine":1,"endColumn":16},{"ruleId":"136","severity":1,"message":"148","line":1,"column":29,"nodeType":"138","messageId":"139","endLine":1,"endColumn":38},{"ruleId":"136","severity":1,"message":"149","line":11,"column":12,"nodeType":"138","messageId":"139","endLine":11,"endColumn":16},{"ruleId":"136","severity":1,"message":"150","line":11,"column":18,"nodeType":"138","messageId":"139","endLine":11,"endColumn":26},{"ruleId":"136","severity":1,"message":"148","line":2,"column":15,"nodeType":"138","messageId":"139","endLine":2,"endColumn":24},{"ruleId":"136","severity":1,"message":"151","line":2,"column":25,"nodeType":"138","messageId":"139","endLine":2,"endColumn":33},{"ruleId":"136","severity":1,"message":"152","line":24,"column":12,"nodeType":"138","messageId":"139","endLine":24,"endColumn":17},{"ruleId":"136","severity":1,"message":"153","line":25,"column":12,"nodeType":"138","messageId":"139","endLine":25,"endColumn":19},{"ruleId":"136","severity":1,"message":"154","line":141,"column":11,"nodeType":"138","messageId":"139","endLine":141,"endColumn":15},{"ruleId":"136","severity":1,"message":"155","line":284,"column":12,"nodeType":"138","messageId":"139","endLine":284,"endColumn":15},{"ruleId":"136","severity":1,"message":"156","line":346,"column":13,"nodeType":"138","messageId":"139","endLine":346,"endColumn":17},{"ruleId":"136","severity":1,"message":"148","line":2,"column":15,"nodeType":"138","messageId":"139","endLine":2,"endColumn":24},{"ruleId":"136","severity":1,"message":"151","line":2,"column":25,"nodeType":"138","messageId":"139","endLine":2,"endColumn":33},{"ruleId":"136","severity":1,"message":"157","line":7,"column":10,"nodeType":"138","messageId":"139","endLine":7,"endColumn":16},{"ruleId":"136","severity":1,"message":"158","line":21,"column":3,"nodeType":"138","messageId":"139","endLine":21,"endColumn":7},{"ruleId":"136","severity":1,"message":"159","line":30,"column":8,"nodeType":"138","messageId":"139","endLine":30,"endColumn":12},{"ruleId":"136","severity":1,"message":"152","line":38,"column":12,"nodeType":"138","messageId":"139","endLine":38,"endColumn":17},{"ruleId":"136","severity":1,"message":"154","line":159,"column":11,"nodeType":"138","messageId":"139","endLine":159,"endColumn":15},{"ruleId":"136","severity":1,"message":"156","line":345,"column":11,"nodeType":"138","messageId":"139","endLine":345,"endColumn":15},"no-unused-vars","'orange' is defined but never used.","Identifier","unusedVar","'GridList' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["160"],"no-negated-in-lhs",["161"],"'useEffect' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'useState' is defined but never used.","'Grids' is assigned a value but never used.","'GridCol' is assigned a value but never used.","'data' is assigned a value but never used.","'res' is assigned a value but never used.","'bull' is assigned a value but never used.","'Button' is defined but never used.","'Cell' is defined but never used.","'Chip' is defined but never used.","no-global-assign","no-unsafe-negation"]