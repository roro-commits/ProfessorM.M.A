{"ast":null,"code":"var _jsxFileName = \"/home/roroblacc/Desktop/FYP/NEWFYP/ProfessorM.M.A/ReactWebApp/WebApp/arch-development/src/components/ui/fighterPage.js\";\n\n/* eslint-disable no-use-before-define */\nimport React, { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport axios from 'axios';\nimport FighterData from '../Data/fighterDataset.json';\nimport { Button } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box'; // abstract Grid\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Grids = props => /*#__PURE__*/_jsxDEV(Grid, {\n  container: true,\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 31\n}, this);\n\n_c = Grids;\n\nconst GridCol = props => /*#__PURE__*/_jsxDEV(Grid, {\n  container: true,\n  direction: \"column\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 25,\n  columnNumber: 33\n}, this);\n\n_c2 = GridCol;\n\nconst GridRow = props => /*#__PURE__*/_jsxDEV(Grid, {\n  container: true,\n  direction: \"row\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 33\n}, this);\n\n_c3 = GridRow;\n\nconst Item = props => /*#__PURE__*/_jsxDEV(Grid, {\n  item: true,\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 30\n}, this);\n\n_c4 = Item;\n\nconst useStyle = theme => ({\n  toolbarMargin: { ...theme.mixins.toolbar,\n    marginBottom: \"1em\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginBottom: \"1.5em\"\n    }\n  },\n  logo: {\n    // height:\"100px\",\n    width: \"16em\",\n    [theme.breakpoints.down(\"md\")]: {\n      height: \"5em\",\n      width: \"17em\"\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      height: \"5.5em\",\n      width: \"19em\"\n    }\n  },\n  paper: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      marginTop: theme.spacing(200),\n      margin: theme.spacing(30),\n      width: theme.spacing(300),\n      height: theme.spacing(16)\n    }\n  },\n  root: {\n    backgroundColor: '#FAFAFA',\n    minWidth: 200,\n    minHeight: 300\n  },\n  Win: {\n    backgroundColor: '#47ff63',\n    minWidth: 200,\n    minHeight: 300\n  },\n  Loss: {\n    backgroundColor: '#F0A89C',\n    minWidth: 200,\n    minHeight: 300\n  },\n  draw: {\n    backgroundColor: '#F0E79C',\n    minWidth: 200,\n    minHeight: 300\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\n\nclass ProfessorMMA extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectOptionsNames: [],\n      height: [],\n      DOB: [],\n      SApM: [],\n      SLpM: [],\n      REACH: [],\n      STANCE: [],\n      WEIGHT: [],\n      strikeAccuracy: [],\n      strDef: [],\n      tdAcc: [],\n      subAvg: [],\n      tdDef: [],\n      tdAvg: [],\n      FighterA: [],\n      FighterB: [],\n      Response: false,\n      Response1: false,\n      Favourite: '',\n      UnderDog: '',\n      favWin: false,\n      undWin: false,\n      draw: false\n    };\n    this.getFighterA = this.getFighterA.bind(this);\n    this.getFighterB = this.getFighterB.bind(this);\n    this.postData = this.postData.bind(this);\n  }\n\n  async getOptions() {\n    const res = await axios.get('http://127.0.0.1:5000/static/fighterDataset2.json');\n    const data = res.data;\n    const nameData = [];\n    const heightData = [];\n    const StrikeAcc = [];\n    const DOB = [];\n    const SApM = [];\n    const SLpM = [];\n    const REACH = [];\n    const STANCE = [];\n    const WEIGHT = [];\n    const strDef = [];\n    const tdAcc = [];\n    const subAvg = [];\n    const tdDef = [];\n    const tdAvg = [];\n\n    for (let i = 0; i < 6000; i++) {\n      // console.log(FighterData.Name[i])\n      if (FighterData.Name[i] !== undefined) {\n        nameData.push({\n          \"Name\": FighterData.Name[i]\n        });\n        heightData.push({\n          \"Height\": FighterData.HEIGHT[i]\n        });\n        StrikeAcc.push({\n          \"StrAcc\": FighterData[\"Str. Acc..\"][i]\n        });\n        DOB.push({\n          \"DOB\": FighterData.DOB[i]\n        });\n        SApM.push({\n          \"SApM\": FighterData.SApM[i]\n        });\n        SLpM.push({\n          \"SLpM\": FighterData.SLpM[i]\n        });\n        REACH.push({\n          \"REACH\": FighterData.REACH[i]\n        });\n        STANCE.push({\n          \"STANCE\": FighterData.STANCE[i]\n        });\n        WEIGHT.push({\n          \"WEIGHT\": FighterData.WEIGHT[i]\n        });\n        strDef.push({\n          \"strDef\": FighterData[\"Str. Def\"][i]\n        });\n        tdAcc.push({\n          \"tdAcc\": FighterData[\"TD Acc\"][i]\n        });\n        subAvg.push({\n          \"subAvg\": FighterData[\"Sub. Avg\"][i]\n        });\n        tdDef.push({\n          \"tdDef\": FighterData[\"TD Def.\"][i]\n        });\n        tdAvg.push({\n          \"tdAvg\": FighterData[\"TD Avg\"][i]\n        });\n      }\n    }\n\n    this.setState({\n      selectOptionsNames: nameData\n    });\n    this.setState({\n      height: heightData\n    });\n    this.setState({\n      strikeAccuracy: StrikeAcc\n    });\n    this.setState({\n      DOB: DOB\n    });\n    this.setState({\n      SLpM: SLpM\n    });\n    this.setState({\n      REACH: REACH\n    });\n    this.setState({\n      STANCE: STANCE\n    });\n    this.setState({\n      WEIGHT: WEIGHT\n    });\n    this.setState({\n      strDef: strDef\n    });\n    this.setState({\n      tdAcc: tdAcc\n    });\n    this.setState({\n      subAvg: subAvg\n    });\n    this.setState({\n      tdDef: tdDef\n    });\n    this.setState({\n      tdAvg: tdAvg\n    });\n    this.setState({\n      SApM: SApM\n    });\n  }\n\n  componentDidMount() {\n    this.getOptions();\n  }\n\n  handleChange(e) {\n    this.setState({\n      name: e.label\n    });\n  }\n\n  getFighterA(param) {\n    const indexA = this.state.selectOptionsNames.indexOf(param);\n    const FighterA = [];\n\n    if (indexA !== -1) {\n      // this.setState({FighterA:[]}) // reset array before setting new data\n      FighterA.push(this.state.selectOptionsNames[indexA].Name);\n      FighterA.push(this.state.height[indexA].Height);\n      FighterA.push(this.state.WEIGHT[indexA].WEIGHT);\n      FighterA.push(this.state.REACH[indexA].REACH);\n      FighterA.push(this.state.STANCE[indexA].STANCE);\n      FighterA.push(this.state.DOB[indexA].DOB);\n      FighterA.push(this.state.SLpM[indexA].SLpM);\n      FighterA.push(this.state.strikeAccuracy[indexA].StrAcc);\n      FighterA.push(this.state.SApM[indexA].SApM);\n      FighterA.push(this.state.strDef[indexA].strDef);\n      FighterA.push(this.state.tdAvg[indexA].tdAvg);\n      FighterA.push(this.state.tdAcc[indexA].tdAcc);\n      FighterA.push(this.state.tdDef[indexA].tdDef);\n      FighterA.push(this.state.subAvg[indexA].subAvg);\n    }\n\n    this.setState({\n      FighterA: FighterA\n    });\n    this.setState({\n      Response: false\n    });\n    this.setState({\n      favWin: false\n    });\n    this.setState({\n      undWin: false\n    });\n    this.setState({\n      draw: false\n    });\n  }\n\n  getFighterB(param) {\n    const indexB = this.state.selectOptionsNames.indexOf(param);\n    const FighterB = [];\n\n    if (indexB !== -1) {\n      // this.setState({FighterB:[]}) // reset array before setting new data\n      FighterB.push(this.state.selectOptionsNames[indexB].Name);\n      FighterB.push(this.state.height[indexB].Height);\n      FighterB.push(this.state.WEIGHT[indexB].WEIGHT);\n      FighterB.push(this.state.REACH[indexB].REACH);\n      FighterB.push(this.state.STANCE[indexB].STANCE);\n      FighterB.push(this.state.DOB[indexB].DOB);\n      FighterB.push(this.state.SLpM[indexB].SLpM);\n      FighterB.push(this.state.strikeAccuracy[indexB].StrAcc);\n      FighterB.push(this.state.SApM[indexB].SApM);\n      FighterB.push(this.state.strDef[indexB].strDef);\n      FighterB.push(this.state.tdAvg[indexB].tdAvg);\n      FighterB.push(this.state.tdAcc[indexB].tdAcc);\n      FighterB.push(this.state.tdDef[indexB].tdDef);\n      FighterB.push(this.state.subAvg[indexB].subAvg);\n    }\n\n    this.setState({\n      FighterB: FighterB\n    });\n    this.setState({\n      Response1: false\n    });\n    this.setState({\n      undWin: ''\n    });\n    this.setState({\n      draw: ''\n    });\n  }\n\n  async postData() {\n    let predictData;\n\n    if (this.state.FighterA.length > 0 && this.state.FighterB.length > 0) {\n      predictData = this.state.FighterA.concat(this.state.FighterB);\n    }\n\n    const axios = require('axios'); // axios.post('http://localhost:5000/predict', predictData)\n    //   .then(function (response) {\n    //     console.log(response);\n    //   })\n\n\n    const res = axios({\n      url: 'http://localhost:5000/react_api ',\n      method: 'POST',\n      data: predictData,\n      // `headers` are custom headers to be sent\n      headers: {\n        'form': 'form'\n      }\n    }).then(response => {\n      // let fighterA = '';\n      // let fighterB = '';\n      console.log(response.data);\n      console.log(\"File has been sent to the server \");\n      this.setState({\n        Response: true\n      });\n      this.setState({\n        Response1: true\n      });\n      let fighterA = response.data.FAVOURITE;\n      let fighterB = response.data.UNDERDOG;\n\n      if (fighterA !== 'Draw' && fighterB !== 'Draw') {\n        fighterA = Number(fighterA);\n        fighterB = Number(fighterB);\n\n        if (fighterA > fighterB) {\n          this.setState({\n            favWin: true\n          });\n          this.setState({\n            undWin: false\n          });\n        } else {\n          this.setState({\n            undWin: true\n          });\n          this.setState({\n            favWin: false\n          });\n        }\n      } else {\n        this.setState({\n          draw: true\n        });\n      }\n\n      this.setState({\n        Favourite: fighterA\n      });\n      this.setState({\n        UnderDog: fighterB\n      });\n    }).catch(() => {\n      console.log(\"internal Server Error\");\n    });\n    ;\n    console.log(predictData); // console.log(res)\n  } // const Grids = (props) => <Grid container {...props} />\n  // const GridCol = (props) => <Grid container direction ='column'{...props} />\n  // const GridRow = (props) => <Grid container direction ='row'{...props} />\n  // const Item = (props) => <Grid item {...props} />\n\n\n  render() {\n    const {\n      classes\n    } = this.props;\n\n    const bull = /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.bullet,\n      children: \"\\u2022\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 20\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        p: 5,\n        children: /*#__PURE__*/_jsxDEV(GridRow, {\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(GridRow, {\n              spacing: 10,\n              children: [/*#__PURE__*/_jsxDEV(Item, {\n                xs: 12,\n                lg: 6,\n                children: [/*#__PURE__*/_jsxDEV(Card, {\n                  elevation: 3,\n                  className: this.state.Response ? this.state.draw ? classes.draw : this.state.favWin ? classes.Win : classes.Loss : classes.root,\n                  children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n                    children: /*#__PURE__*/_jsxDEV(CardActions, {\n                      children: /*#__PURE__*/_jsxDEV(CardContent, {\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"h7\",\n                          component: \"h1\",\n                          children: [\"Favourite : \", this.state.FighterA[0]]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 360,\n                          columnNumber: 49\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"h2\",\n                          component: \"h1\",\n                          children: this.state.Response ? this.state.draw ? this.state.Favourite : this.state.Favourite + 'Percent' : ''\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 363,\n                          columnNumber: 51\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 359,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 358,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      color: \"textPrimary\",\n                      component: \"p\",\n                      children: [\"Height: \", this.state.FighterA[1]]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 374,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      color: \"textPrimary\",\n                      component: \"p\",\n                      children: [\"Weight: \", this.state.FighterA[2]]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 380,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 38\n                  }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      color: \"textPrimary\",\n                      component: \"p\",\n                      children: [\"Reach: \", this.state.FighterA[3]]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 386,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      color: \"textPrimary\",\n                      component: \"p\",\n                      children: [\"Stance \", this.state.FighterA[4]]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 392,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 391,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      color: \"textPrimary\",\n                      component: \"p\",\n                      children: [\"Dob \", this.state.FighterA[5]]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 397,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 39\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(GridRow, {\n                  children: /*#__PURE__*/_jsxDEV(Item, {\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      p: 1.5,\n                      children: /*#__PURE__*/_jsxDEV(Paper, {\n                        styles: classes.paper,\n                        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                          id: \"FighterA\",\n                          options: this.state.selectOptionsNames,\n                          getOptionLabel: option => option.Name,\n                          style: {\n                            width: 500\n                          },\n                          onChange: (event, value) => this.getFighterA(value) // sends Index of selected Item Fighter A\n                          ,\n                          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                            label: \"Fighters\",\n                            variant: \"outlined\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 413,\n                            columnNumber: 73\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 407,\n                          columnNumber: 46\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 405,\n                        columnNumber: 43\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 404,\n                      columnNumber: 39\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 35\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Item, {\n                xs: 12,\n                lg: 6,\n                children: [/*#__PURE__*/_jsxDEV(Card, {\n                  elevation: 3,\n                  className: this.state.Response1 ? this.state.draw ? classes.draw : this.state.undWin ? classes.Win : classes.Loss : classes.root,\n                  children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n                    children: /*#__PURE__*/_jsxDEV(CardActions, {\n                      children: /*#__PURE__*/_jsxDEV(CardContent, {\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"h7\",\n                          component: \"h1\",\n                          children: [\"UnderDog : \", this.state.FighterB[0]]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 428,\n                          columnNumber: 49\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"h2\",\n                          component: \"h1\",\n                          children: this.state.Response1 ? this.state.draw ? this.state.UnderDog : this.state.UnderDog + 'Percent' : ''\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 431,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 427,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 426,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      color: \"textPrimary\",\n                      component: \"p\",\n                      children: [\"Height: \", this.state.FighterB[1]]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 441,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 440,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      color: \"textPrimary\",\n                      component: \"p\",\n                      children: [\"Weight: \", this.state.FighterB[2]]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 447,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 446,\n                    columnNumber: 38\n                  }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      color: \"textPrimary\",\n                      component: \"p\",\n                      children: [\"Reach: \", this.state.FighterB[3]]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 453,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 452,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      color: \"textPrimary\",\n                      component: \"p\",\n                      children: [\"Stance \", this.state.FighterB[4]]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 459,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 458,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      color: \"textPrimary\",\n                      component: \"p\",\n                      children: [\"Dob \", this.state.FighterB[5]]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 464,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 463,\n                    columnNumber: 39\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(GridRow, {\n                  justify: \"flex-end\",\n                  alignItems: \"flex-end\",\n                  children: /*#__PURE__*/_jsxDEV(Item, {\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      p: 1.5,\n                      children: /*#__PURE__*/_jsxDEV(Paper, {\n                        styles: classes.paper,\n                        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                          id: \"FighterB\",\n                          options: this.state.selectOptionsNames,\n                          getOptionLabel: option => option.Name,\n                          style: {\n                            width: 500\n                          },\n                          onChange: (event, value) => this.getFighterB(value) // sends Index of selected Item Fighter B\n                          ,\n                          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                            label: \"Fighters\",\n                            variant: \"outlined\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 482,\n                            columnNumber: 72\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 476,\n                          columnNumber: 40\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 475,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 474,\n                      columnNumber: 36\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 473,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(GridRow, {\n                children: /*#__PURE__*/_jsxDEV(Item, {\n                  container: true,\n                  direction: \"row\",\n                  justify: \"center\",\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"contained-button-file\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      size: \"large\",\n                      variant: \"contained\",\n                      color: \"primary\",\n                      onClick: this.postData,\n                      component: \"span\",\n                      children: \"Predict\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 499,\n                      columnNumber: 39\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 498,\n                    columnNumber: 35\n                  }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 5\n    }, this);\n  }\n\n} // export default class ComboBox\n\n\nexport default withStyles(useStyle)(ProfessorMMA);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Grids\");\n$RefreshReg$(_c2, \"GridCol\");\n$RefreshReg$(_c3, \"GridRow\");\n$RefreshReg$(_c4, \"Item\");","map":{"version":3,"sources":["/home/roroblacc/Desktop/FYP/NEWFYP/ProfessorM.M.A/ReactWebApp/WebApp/arch-development/src/components/ui/fighterPage.js"],"names":["React","useEffect","useState","TextField","Autocomplete","axios","FighterData","Button","Grid","Paper","withStyles","Card","CardActions","CardContent","CardActionArea","Typography","Box","Grids","props","GridCol","GridRow","Item","useStyle","theme","toolbarMargin","mixins","toolbar","marginBottom","breakpoints","down","logo","width","height","paper","display","flexWrap","marginTop","spacing","margin","root","backgroundColor","minWidth","minHeight","Win","Loss","draw","bullet","transform","title","fontSize","pos","ProfessorMMA","Component","constructor","state","selectOptionsNames","DOB","SApM","SLpM","REACH","STANCE","WEIGHT","strikeAccuracy","strDef","tdAcc","subAvg","tdDef","tdAvg","FighterA","FighterB","Response","Response1","Favourite","UnderDog","favWin","undWin","getFighterA","bind","getFighterB","postData","getOptions","res","get","data","nameData","heightData","StrikeAcc","i","Name","undefined","push","HEIGHT","setState","componentDidMount","handleChange","e","name","label","param","indexA","indexOf","Height","StrAcc","indexB","predictData","length","concat","require","url","method","headers","then","response","console","log","fighterA","FAVOURITE","fighterB","UNDERDOG","Number","catch","render","classes","bull","option","event","value","params"],"mappings":"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","sourcesContent":["/* eslint-disable no-use-before-define */\nimport React,{useEffect,useState} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport axios from 'axios'\nimport FighterData from '../Data/fighterDataset.json'\nimport { Button } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box'\n\n\n\n\n\n      // abstract Grid\n\n     const Grids = (props) => <Grid container {...props} />\n     const GridCol = (props) => <Grid container direction ='column'{...props} />\n     const GridRow = (props) => <Grid container direction ='row'{...props} />\n     const Item = (props) => <Grid item {...props} />\n\n\n\n\nconst useStyle = theme => ({\n  toolbarMargin: {\n    ...theme.mixins.toolbar,\n    marginBottom: \"1em\",\n    [theme.breakpoints.down(\"xs\")]:{\n      marginBottom: \"1.5em\",\n\n    },\n  },\n  logo: {\n    // height:\"100px\",\n    width: \"16em\",\n    [theme.breakpoints.down(\"md\")]:{\n      height: \"5em\",\n      width: \"17em\",\n    },\n    [theme.breakpoints.down(\"xs\")]:{\n      height: \"5.5em\",\n      width: \"19em\",\n\n    },\n\n  },\n  paper:{\n     display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n       marginTop:theme.spacing(200),\n      margin: theme.spacing(30),\n      width: theme.spacing(300),\n      height: theme.spacing(16)\n    }\n  },\n   root: {\n      backgroundColor: '#FAFAFA',\n    minWidth: 200,\n     minHeight:300,\n  },\n  Win: {\n      backgroundColor: '#47ff63',\n    minWidth: 200,\n     minHeight:300,\n  },\n Loss: {\n  backgroundColor:'#F0A89C',\nminWidth: 200,\n minHeight:300,\n},\n    draw:{\n        backgroundColor: '#F0E79C',\n        minWidth: 200,\n        minHeight:300,\n\n    },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\n\n\n\n\n\nclass ProfessorMMA extends React.Component {\nconstructor(props){\n    super(props)\n    this.state = {\n      selectOptionsNames : [],\n      height: [],\n      DOB:[],\n      SApM:[],\n      SLpM:[],\n      REACH:[],\n      STANCE:[],\n      WEIGHT:[],\n      strikeAccuracy:[],\n      strDef:[],\n      tdAcc:[],\n      subAvg:[],\n      tdDef:[],\n      tdAvg:[],\n      FighterA:[],\n      FighterB:[],\n      Response:false,\n      Response1:false,\n      Favourite: '',\n      UnderDog: '',\n      favWin:false,\n      undWin:false,\n      draw:false,\n    }\n    this.getFighterA = this.getFighterA.bind(this);\n    this.getFighterB = this.getFighterB.bind(this);\n    this.postData = this.postData.bind(this);\n\n  }\n\n\n  async getOptions(){\n    const res = await axios.get('http://127.0.0.1:5000/static/fighterDataset2.json')\n    const data = res.data\n    const nameData =[]\n    const heightData =[]\n    const StrikeAcc =[]\n    const DOB =[]\n    const SApM =[]\n    const SLpM =[]\n    const REACH =[]\n    const STANCE =[]\n    const WEIGHT =[]\n    const strDef =[]\n    const tdAcc =[]\n    const subAvg =[]\n    const tdDef =[]\n    const tdAvg =[]\n\n\n    for(let i =0; i< 6000 ;i++){\n      // console.log(FighterData.Name[i])\n      if (FighterData.Name[i] !== undefined){\n        nameData.push({ \"Name\" : FighterData.Name[i]})\n        heightData.push({\"Height\": FighterData.HEIGHT[i]})\n        StrikeAcc.push({\"StrAcc\": FighterData[\"Str. Acc..\"][i]})\n        DOB.push({\"DOB\":FighterData.DOB[i]})\n        SApM.push({\"SApM\":FighterData.SApM[i]})\n        SLpM.push({\"SLpM\":FighterData.SLpM[i]})\n        REACH.push({\"REACH\":FighterData.REACH[i]})\n        STANCE.push({\"STANCE\":FighterData.STANCE[i]})\n        WEIGHT.push({\"WEIGHT\":FighterData.WEIGHT[i]})\n        strDef.push({\"strDef\":FighterData[\"Str. Def\"][i]})\n        tdAcc.push({\"tdAcc\":FighterData[\"TD Acc\"][i]})\n        subAvg.push({\"subAvg\":FighterData[\"Sub. Avg\"][i]})\n        tdDef.push({\"tdDef\":FighterData[\"TD Def.\"][i]})\n        tdAvg.push({\"tdAvg\":FighterData[\"TD Avg\"][i]})\n\n\n      }\n    }\n\n    this.setState({selectOptionsNames: nameData})\n    this.setState({height: heightData})\n    this.setState({strikeAccuracy: StrikeAcc})\n    this.setState({DOB: DOB})\n    this.setState({SLpM: SLpM})\n    this.setState({REACH: REACH})\n    this.setState({STANCE: STANCE})\n    this.setState({WEIGHT: WEIGHT})\n    this.setState({strDef: strDef})\n    this.setState({tdAcc: tdAcc})\n    this.setState({subAvg: subAvg})\n    this.setState({tdDef: tdDef})\n    this.setState({tdAvg: tdAvg})\n    this.setState({SApM: SApM})\n\n\n\n\n  }\n    componentDidMount(){\n      this.getOptions()\n  }\n\n  handleChange(e){\n   this.setState({name:e.label})\n  }\n\n\n  getFighterA(param){\n    const indexA = this.state.selectOptionsNames.indexOf(param);\n    const FighterA=[]\n\n\n    if(indexA !== -1 ){\n      // this.setState({FighterA:[]}) // reset array before setting new data\n      FighterA.push(this.state.selectOptionsNames[indexA].Name)\n      FighterA.push(this.state.height[indexA].Height)\n      FighterA.push(this.state.WEIGHT[indexA].WEIGHT)\n      FighterA.push(this.state.REACH[indexA].REACH)\n      FighterA.push(this.state.STANCE[indexA].STANCE)\n      FighterA.push(this.state.DOB[indexA].DOB)\n      FighterA.push(this.state.SLpM[indexA].SLpM)\n      FighterA.push(this.state.strikeAccuracy[indexA].StrAcc)\n      FighterA.push(this.state.SApM[indexA].SApM)\n      FighterA.push(this.state.strDef[indexA].strDef)\n      FighterA.push(this.state.tdAvg[indexA].tdAvg)\n      FighterA.push(this.state.tdAcc[indexA].tdAcc)\n      FighterA.push(this.state.tdDef[indexA].tdDef)\n      FighterA.push(this.state.subAvg[indexA].subAvg)\n    }\n    this.setState({FighterA:FighterA})\n    this.setState({Response:false});\n    this.setState({favWin:false});\n    this.setState({undWin:false});\n    this.setState({draw:false});\n\n\n\n  }\n\n  getFighterB(param){\n    const indexB = this.state.selectOptionsNames.indexOf(param);\n    const FighterB=[]\n    if(indexB!== -1 ){\n      // this.setState({FighterB:[]}) // reset array before setting new data\n      FighterB.push(this.state.selectOptionsNames[indexB].Name)\n      FighterB.push(this.state.height[indexB].Height)\n      FighterB.push(this.state.WEIGHT[indexB].WEIGHT)\n      FighterB.push(this.state.REACH[indexB].REACH)\n      FighterB.push(this.state.STANCE[indexB].STANCE)\n      FighterB.push(this.state.DOB[indexB].DOB)\n      FighterB.push(this.state.SLpM[indexB].SLpM)\n      FighterB.push(this.state.strikeAccuracy[indexB].StrAcc)\n      FighterB.push(this.state.SApM[indexB].SApM)\n      FighterB.push(this.state.strDef[indexB].strDef)\n      FighterB.push(this.state.tdAvg[indexB].tdAvg)\n      FighterB.push(this.state.tdAcc[indexB].tdAcc)\n      FighterB.push(this.state.tdDef[indexB].tdDef)\n      FighterB.push(this.state.subAvg[indexB].subAvg)\n\n    }\n    this.setState({FighterB:FighterB});\n    this.setState({Response1:false});\n    this.setState({undWin:''});\n    this.setState({draw:''});\n\n  }\n\n\n  async postData(){\n  let predictData ;\n\n\n    if(this.state.FighterA.length > 0 && this.state.FighterB.length > 0){\n        predictData = this.state.FighterA.concat(this.state.FighterB);\n    }\n\n    const axios = require('axios')\n\n  // axios.post('http://localhost:5000/predict', predictData)\n  //   .then(function (response) {\n  //     console.log(response);\n  //   })\n\n    const  res = axios({\n          url: 'http://localhost:5000/react_api ',\n          method:'POST',\n          data: predictData,\n        // `headers` are custom headers to be sent\n          headers: {'form':'form'},\n      })\n      .then ((response) =>{\n\n         // let fighterA = '';\n         // let fighterB = '';\n\n        console.log(response.data)\n        console.log(\"File has been sent to the server \")\n        this.setState({Response:true})\n        this.setState({Response1:true})\n\n\n        let fighterA =  response.data.FAVOURITE;\n        let fighterB = response.data.UNDERDOG;\n\n        if ( fighterA !== 'Draw' && fighterB !== 'Draw'){\n            fighterA =Number(fighterA)\n            fighterB =Number(fighterB)\n\n            if (fighterA > fighterB){\n                this.setState({favWin:true});\n                this.setState({undWin:false});\n            }else {\n                this.setState({undWin:true});\n                this.setState({favWin:false});\n            }\n        }else{\n            this.setState({draw:true})\n        }\n\n        this.setState({Favourite:fighterA})\n        this.setState({UnderDog:fighterB})\n\n\n      })\n      .catch(() =>{\n        console.log(\"internal Server Error\")\n      });;\n\n\n    console.log(predictData);\n\n    // console.log(res)\n\n\n  }\n\n\n     // const Grids = (props) => <Grid container {...props} />\n     // const GridCol = (props) => <Grid container direction ='column'{...props} />\n     // const GridRow = (props) => <Grid container direction ='row'{...props} />\n     // const Item = (props) => <Grid item {...props} />\n\n\n  render(){\n      const { classes } = this.props;\n      const bull = <span className={classes.bullet}>•</span>;\n    return (\n\n    <React.Fragment>\n       <Box p={5}>\n           <GridRow >\n                <Item xs={12}>\n                      <GridRow spacing={10}>\n\n                            <Item xs={12} lg={6}>\n                                <Card  elevation={3} className={this.state.Response? this.state.draw ?  classes.draw : this.state.favWin ? classes.Win: classes.Loss : classes.root}>\n                                    <CardActionArea>\n                                        <CardActions>\n                                            <CardContent>\n                                                <Typography variant=\"h7\" component=\"h1\">\n                                                    Favourite : {this.state.FighterA[0]}\n                                                 </Typography>\n                                                  <Typography variant=\"h2\" component=\"h1\">\n                                                    {/*{this.state.Response ? this.state.Favourite + 'Percent' : '' }*/}\n                                                   {this.state.Response ? this.state.draw ? this.state.Favourite : this.state.Favourite + 'Percent' : ''}\n\n                                                 </Typography>\n                                            </CardContent>\n                                        </CardActions>\n                                    </CardActionArea>\n\n\n                                    <CardActions>\n                                        <Typography variant=\"h6\" color=\"textPrimary\" component=\"p\">\n                                           Height: {this.state.FighterA[1]}\n                                        </Typography>\n                                    </CardActions>\n\n                                     <CardActions>\n                                        <Typography variant=\"h6\" color=\"textPrimary\" component=\"p\">\n                                           Weight: {this.state.FighterA[2]}\n                                        </Typography>\n                                    </CardActions>\n\n                                    <CardActions>\n                                        <Typography variant=\"h6\" color=\"textPrimary\" component=\"p\">\n                                           Reach: {this.state.FighterA[3]}\n                                        </Typography>\n                                    </CardActions>\n\n                                    <CardActions>\n                                        <Typography variant=\"h6\" color=\"textPrimary\" component=\"p\">\n                                           Stance {this.state.FighterA[4]}\n                                        </Typography>\n                                    </CardActions>\n                                      <CardActions>\n                                        <Typography variant=\"h6\" color=\"textPrimary\" component=\"p\">\n                                           Dob {this.state.FighterA[5]}\n                                        </Typography>\n                                    </CardActions>\n                                </Card>\n                              <GridRow>\n                                  <Item >\n                                      <Box p={1.5}>\n                                          <Paper  styles={classes.paper}>\n\n                                             <Autocomplete\n                                              id=\"FighterA\"\n                                              options={this.state.selectOptionsNames}\n                                              getOptionLabel={(option) => option.Name}\n                                              style={{ width: 500 }}\n                                              onChange={(event, value) => this.getFighterA(value)} // sends Index of selected Item Fighter A\n                                              renderInput={(params ) => <TextField {...params}  label=\"Fighters\" variant=\"outlined\" />}\n                                            />\n                                        </Paper>\n                                      </Box>\n\n                                </Item>\n\n                              </GridRow>\n                          </Item>\n\n                            <Item xs={12} lg={6}>\n                                <Card  elevation={3} className={this.state.Response1?  this.state.draw ?  classes.draw : this.state.undWin ? classes.Win: classes.Loss : classes.root}>\n                                    <CardActionArea>\n                                        <CardActions>\n                                            <CardContent>\n                                                <Typography variant=\"h7\" component=\"h1\">\n                                                    UnderDog : {this.state.FighterB[0]}\n                                                 </Typography>\n                                                <Typography variant=\"h2\" component=\"h1\">\n                                                    {/*{this.state.Response ? this.state.UnderDog + 'Percent' : '' }*/}\n                                                    {this.state.Response1 ? this.state.draw ? this.state.UnderDog : this.state.UnderDog + 'Percent' : ''}\n                                                 </Typography>\n                                            </CardContent>\n                                        </CardActions>\n                                    </CardActionArea>\n\n\n                                    <CardActions>\n                                        <Typography variant=\"h6\" color=\"textPrimary\" component=\"p\">\n                                           Height: {this.state.FighterB[1]}\n                                        </Typography>\n                                    </CardActions>\n\n                                     <CardActions>\n                                        <Typography variant=\"h6\" color=\"textPrimary\" component=\"p\">\n                                           Weight: {this.state.FighterB[2]}\n                                        </Typography>\n                                    </CardActions>\n\n                                    <CardActions>\n                                        <Typography variant=\"h6\" color=\"textPrimary\" component=\"p\">\n                                           Reach: {this.state.FighterB[3]}\n                                        </Typography>\n                                    </CardActions>\n\n                                    <CardActions>\n                                        <Typography variant=\"h6\" color=\"textPrimary\" component=\"p\">\n                                           Stance {this.state.FighterB[4]}\n                                        </Typography>\n                                    </CardActions>\n                                      <CardActions>\n                                        <Typography variant=\"h6\" color=\"textPrimary\" component=\"p\">\n                                           Dob {this.state.FighterB[5]}\n                                        </Typography>\n                                    </CardActions>\n                                </Card>\n\n                            <GridRow  justify=\"flex-end\"\n                                alignItems=\"flex-end\" >\n\n                                <Item >\n                                   <Box p={1.5}>\n                                    <Paper styles={classes.paper}>\n                                       <Autocomplete\n                                              id=\"FighterB\"\n                                              options={this.state.selectOptionsNames  }\n                                              getOptionLabel={(option) => option.Name}\n                                              style={{ width: 500 }}\n                                              onChange={(event, value) => this.getFighterB(value)} // sends Index of selected Item Fighter B\n                                              renderInput={(params) => <TextField {...params} label=\"Fighters\" variant=\"outlined\" />}\n                                        />\n                                    </Paper>\n                                   </Box>\n                                </Item>\n\n                          </GridRow>\n                          </Item>\n\n\n                          <GridRow>\n                              <Item   container\n                                direction=\"row\"\n                                justify=\"center\"\n                                alignItems=\"center\">\n\n                                  <label htmlFor=\"contained-button-file\">\n                                      <Button size='large' variant=\"contained\" color=\"primary\" onClick={this.postData} component=\"span\" >\n                                            Predict\n                                      </Button>\n                                </label>\n                                    <h1>\n                                        {/*{this.state.Response}*/}\n                                  </h1>\n                            </Item>\n\n                          </GridRow>\n\n                      </GridRow>\n                </Item>\n            </GridRow>\n\n       </Box>\n\n    </React.Fragment>\n\n  );\n  }\n}\n\n\n// export default class ComboBox\nexport default withStyles(useStyle)(ProfessorMMA)\n"]},"metadata":{},"sourceType":"module"}