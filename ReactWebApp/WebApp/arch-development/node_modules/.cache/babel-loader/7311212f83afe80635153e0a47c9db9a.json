{"ast":null,"code":"var _jsxFileName = \"/home/roroblacc/Desktop/FYP/NEWFYP/ProfessorM.M.A/ReactWebApp/WebApp/arch-development/src/components/ui/statistics.js\";\n\n/* eslint-disable no-use-before-define */\nimport React, { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport axios from 'axios';\nimport FighterData from '../Data/fighterDataset.json';\nimport { Button } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box'; // import { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip} from 'recharts';\n\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, ReferenceLine } from 'recharts';\nimport { Radar, RadarChart, PolarGrid, Legend, PolarAngleAxis, PolarRadiusAxis, ResponsiveContainer } from 'recharts';\nimport Chip from '@material-ui/core/Chip'; // abstract Grid\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Grids = props => /*#__PURE__*/_jsxDEV(Grid, {\n  container: true,\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 31\n}, this);\n\n_c = Grids;\n\nconst GridCol = props => /*#__PURE__*/_jsxDEV(Grid, {\n  container: true,\n  direction: \"column\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 33\n}, this);\n\n_c2 = GridCol;\n\nconst GridRow = props => /*#__PURE__*/_jsxDEV(Grid, {\n  container: true,\n  direction: \"row\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 33\n}, this);\n\n_c3 = GridRow;\n\nconst Item = props => /*#__PURE__*/_jsxDEV(Grid, {\n  item: true,\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 41,\n  columnNumber: 30\n}, this);\n\n_c4 = Item;\n\nconst useStyle = theme => ({\n  toolbarMargin: { ...theme.mixins.toolbar,\n    marginBottom: \"1em\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginBottom: \"1.5em\"\n    }\n  },\n  logo: {\n    // height:\"100px\",\n    width: \"16em\",\n    [theme.breakpoints.down(\"md\")]: {\n      height: \"5em\",\n      width: \"17em\"\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      height: \"5.5em\",\n      width: \"19em\"\n    }\n  },\n  paper: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      marginTop: theme.spacing(200),\n      margin: theme.spacing(30),\n      width: theme.spacing(300),\n      height: theme.spacing(16)\n    }\n  },\n  root: {\n    backgroundColor: '#FAFAFA',\n    minWidth: 200,\n    minHeight: 300\n  },\n  Win: {\n    backgroundColor: '#BCE6DA',\n    minWidth: 200,\n    minHeight: 300\n  },\n  Loss: {\n    backgroundColor: '#F0A89C',\n    minWidth: 200,\n    minHeight: 300\n  },\n  draw: {\n    backgroundColor: '#F0E79C',\n    minWidth: 200,\n    minHeight: 300\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\n\nclass Statistics extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectOptionsNames: [],\n      height: [],\n      DOB: [],\n      SApM: [],\n      SLpM: [],\n      REACH: [],\n      STANCE: [],\n      WEIGHT: [],\n      strikeAccuracy: [],\n      strDef: [],\n      tdAcc: [],\n      subAvg: [],\n      tdDef: [],\n      tdAvg: [],\n      FighterA: [],\n      FighterB: [],\n      Response: false,\n      Response1: false,\n      Favourite: '',\n      UnderDog: '',\n      favWin: false,\n      undWin: false,\n      draw: false,\n      chart: [],\n      charttwo: [],\n      radarB: false // fixedOptions:[\"hello\"],\n      // value:[...this.fixedOptions, this.FighterA]\n\n    };\n    this.getFighterA = this.getFighterA.bind(this);\n  }\n\n  async getOptions() {\n    const res = await axios.get('http://127.0.0.1:5000/static/fighterDataset2.json');\n    const data = res.data;\n    const nameData = [];\n    const heightData = [];\n    const StrikeAcc = [];\n    const DOB = [];\n    const SApM = [];\n    const SLpM = [];\n    const REACH = [];\n    const STANCE = [];\n    const WEIGHT = [];\n    const strDef = [];\n    const tdAcc = [];\n    const subAvg = [];\n    const tdDef = [];\n    const tdAvg = [];\n\n    for (let i = 0; i < 6000; i++) {\n      // console.log(FighterData.Name[i])\n      if (FighterData.Name[i] !== undefined) {\n        nameData.push({\n          \"Name\": FighterData.Name[i]\n        });\n        heightData.push({\n          \"Height\": FighterData.HEIGHT[i]\n        });\n        StrikeAcc.push({\n          \"StrAcc\": FighterData[\"Str. Acc..\"][i]\n        });\n        DOB.push({\n          \"DOB\": FighterData.DOB[i]\n        });\n        SApM.push({\n          \"SApM\": FighterData.SApM[i]\n        });\n        SLpM.push({\n          \"SLpM\": FighterData.SLpM[i]\n        });\n        REACH.push({\n          \"REACH\": FighterData.REACH[i]\n        });\n        STANCE.push({\n          \"STANCE\": FighterData.STANCE[i]\n        });\n        WEIGHT.push({\n          \"WEIGHT\": FighterData.WEIGHT[i]\n        });\n        strDef.push({\n          \"strDef\": FighterData[\"Str. Def\"][i]\n        });\n        tdAcc.push({\n          \"tdAcc\": FighterData[\"TD Acc\"][i]\n        });\n        subAvg.push({\n          \"subAvg\": FighterData[\"Sub. Avg\"][i]\n        });\n        tdDef.push({\n          \"tdDef\": FighterData[\"TD Def.\"][i]\n        });\n        tdAvg.push({\n          \"tdAvg\": FighterData[\"TD Avg\"][i]\n        });\n      }\n    }\n\n    this.setState({\n      selectOptionsNames: nameData\n    });\n    this.setState({\n      height: heightData\n    });\n    this.setState({\n      strikeAccuracy: StrikeAcc\n    });\n    this.setState({\n      DOB: DOB\n    });\n    this.setState({\n      SLpM: SLpM\n    });\n    this.setState({\n      REACH: REACH\n    });\n    this.setState({\n      STANCE: STANCE\n    });\n    this.setState({\n      WEIGHT: WEIGHT\n    });\n    this.setState({\n      strDef: strDef\n    });\n    this.setState({\n      tdAcc: tdAcc\n    });\n    this.setState({\n      subAvg: subAvg\n    });\n    this.setState({\n      tdDef: tdDef\n    });\n    this.setState({\n      tdAvg: tdAvg\n    });\n    this.setState({\n      SApM: SApM\n    });\n  }\n\n  componentDidMount() {\n    this.getOptions();\n  }\n\n  getFighterA(param) {\n    const indexA = this.state.selectOptionsNames.indexOf(param);\n    const FighterA = [];\n    let radar_one = [];\n\n    const convertRange = (value, min, max) => {\n      for (let i = 0; i < value[0].length; i++) {\n        if (max - min === 0) return 1;\n        value[0][i] = (value[0][i] - min) / (max - min);\n      }\n\n      return value[0];\n    };\n\n    if (indexA !== -1) {\n      // this.setState({FighterA:[]}) // reset array before setting new data\n      FighterA.push(this.state.selectOptionsNames[indexA].Name);\n      FighterA.push(this.state.height[indexA].Height);\n      FighterA.push(this.state.WEIGHT[indexA].WEIGHT);\n      FighterA.push(this.state.REACH[indexA].REACH);\n      FighterA.push(this.state.STANCE[indexA].STANCE);\n      FighterA.push(this.state.DOB[indexA].DOB);\n      FighterA.push(this.state.SLpM[indexA].SLpM);\n      FighterA.push(this.state.strikeAccuracy[indexA].StrAcc);\n      FighterA.push(this.state.SApM[indexA].SApM);\n      FighterA.push(this.state.strDef[indexA].strDef);\n      FighterA.push(this.state.tdAvg[indexA].tdAvg);\n      FighterA.push(this.state.tdAcc[indexA].tdAcc);\n      FighterA.push(this.state.tdDef[indexA].tdDef);\n      FighterA.push(this.state.subAvg[indexA].subAvg);\n      radar_one.push(FighterA.slice(1, 2).concat(FighterA.slice(3, 4)).concat(FighterA.slice(6, 13)));\n      console.log(\"radarone \", radar_one);\n      radar_one[0][0] = radar_one[0][0] * 30;\n      radar_one[0][2] = radar_one[0][2] * 10;\n      radar_one[0][4] = radar_one[0][4] * 10;\n      radar_one[0][6] = radar_one[0][6] * 10;\n      let chart = convertRange(radar_one, 2, 10);\n      this.setState({\n        chart: chart\n      });\n    } else {\n      this.setState({\n        chart: radar_one\n      });\n      this.setState({\n        FighterB: FighterA\n      });\n    } // console.log(\"Chart\",chart)\n\n\n    this.setState({\n      FighterA: FighterA\n    });\n    this.setState({\n      Response: false\n    });\n    this.setState({\n      undWin: false\n    });\n    this.setState({\n      draw: false\n    });\n  }\n\n  getFighterB(param) {\n    const indexB = this.state.selectOptionsNames.indexOf(param);\n    const FighterB = [];\n    let radar_two = [];\n\n    const convertRange = (value, min, max) => {\n      for (let i = 0; i < value[0].length; i++) {\n        if (max - min === 0) return 1;\n        value[0][i] = (value[0][i] - min) / (max - min);\n      }\n\n      return value[0];\n    };\n\n    if (indexB !== -1) {\n      // this.setState({FighterB:[]}) // reset array before setting new data\n      FighterB.push(this.state.selectOptionsNames[indexB].Name);\n      FighterB.push(this.state.height[indexB].Height);\n      FighterB.push(this.state.WEIGHT[indexB].WEIGHT);\n      FighterB.push(this.state.REACH[indexB].REACH);\n      FighterB.push(this.state.STANCE[indexB].STANCE);\n      FighterB.push(this.state.DOB[indexB].DOB);\n      FighterB.push(this.state.SLpM[indexB].SLpM);\n      FighterB.push(this.state.strikeAccuracy[indexB].StrAcc);\n      FighterB.push(this.state.SApM[indexB].SApM);\n      FighterB.push(this.state.strDef[indexB].strDef);\n      FighterB.push(this.state.tdAvg[indexB].tdAvg);\n      FighterB.push(this.state.tdAcc[indexB].tdAcc);\n      FighterB.push(this.state.tdDef[indexB].tdDef);\n      FighterB.push(this.state.subAvg[indexB].subAvg);\n      radar_two.push(FighterB.slice(1, 2).concat(FighterB.slice(3, 4)).concat(FighterB.slice(6, 13)));\n      console.log(\"Radar Two \", radar_two);\n      radar_two[0][0] = radar_two[0][0] * 30;\n      radar_two[0][2] = radar_two[0][2] * 10;\n      radar_two[0][4] = radar_two[0][4] * 10;\n      radar_two[0][6] = radar_two[0][6] * 10;\n      let chart = convertRange(radar_two, 2, 10);\n      this.setState({\n        charttwo: chart\n      });\n    } else {\n      this.setState({\n        charttwo: radar_two\n      });\n      this.setState({\n        FighterB: FighterB\n      });\n    }\n\n    this.setState({\n      FighterB: FighterB\n    });\n  } // const Grids = (props) => <Grid container {...props} />\n  // const GridCol = (props) => <Grid container direction ='column'{...props} />\n  // const GridRow = (props) => <Grid container direction ='row'{...props} />\n  // const Item = (props) => <Grid item {...props} />\n\n\n  render() {\n    const {\n      classes\n    } = this.props;\n\n    const bull = /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.bullet,\n      children: \"\\u2022\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 18\n    }, this);\n\n    const data = [{\n      subject: 'HEIGHT',\n      A: this.state.chart[0],\n      B: this.state.charttwo[0],\n      fullMark: 20\n    }, {\n      subject: 'REACH',\n      A: this.state.chart[1],\n      B: this.state.charttwo[1],\n      fullMark: 10\n    }, {\n      subject: 'Strike Landed Per Min',\n      A: this.state.chart[2],\n      B: this.state.charttwo[2],\n      fullMark: 10\n    }, {\n      subject: 'Strike Acc',\n      A: this.state.chart[3],\n      B: this.state.charttwo[3],\n      fullMark: 10\n    }, {\n      subject: 'Strike Absorbed Per Min',\n      A: this.state.chart[4],\n      B: this.state.charttwo[4],\n      fullMark: 10\n    }, {\n      subject: 'Strike Def',\n      A: this.state.chart[5],\n      B: this.state.charttwo[5],\n      fullMark: 10\n    }, {\n      subject: 'Takedown Avg',\n      A: this.state.chart[6],\n      B: this.state.charttwo[6],\n      fullMark: 10\n    }, {\n      subject: 'Takedown Acc',\n      A: this.state.chart[7],\n      B: this.state.charttwo[7],\n      fullMark: 10\n    }, {\n      subject: 'Takedown Def',\n      A: this.state.chart[8],\n      B: this.state.charttwo[8],\n      fullMark: 10\n    } //       {\n    //   subject: 'Submission Avg',\n    //   A: this.state.chart[8],\n    //   B: 0,\n    //   fullMark: 10,\n    // },\n    ];\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        p: 5,\n        children: [/*#__PURE__*/_jsxDEV(GridRow, {\n          children: /*#__PURE__*/_jsxDEV(GridRow, {\n            children: /*#__PURE__*/_jsxDEV(GridRow, {\n              spacing: 10,\n              children: [/*#__PURE__*/_jsxDEV(GridRow, {\n                xs: 6,\n                justify: \"flex-end\",\n                alignItems: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Item, {\n                  styles: {\n                    marginLeft: 2000\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    p: 1.5,\n                    children: /*#__PURE__*/_jsxDEV(Paper, {\n                      styles: classes.paper,\n                      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                        id: \"FighterA\",\n                        options: this.state.selectOptionsNames,\n                        getOptionLabel: option => option.Name,\n                        style: {\n                          width: 500\n                        },\n                        onChange: (event, value) => this.getFighterA(value) // sends Index of selected Item Fighter A\n                        ,\n                        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                          label: \"Fighters\",\n                          variant: \"outlined\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 431,\n                          columnNumber: 73\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 425,\n                        columnNumber: 46\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 423,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 39\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(GridRow, {\n                xs: 6,\n                justify: \"flex-start\",\n                alignItems: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Item, {\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    p: 1.5,\n                    children: /*#__PURE__*/_jsxDEV(Paper, {\n                      styles: classes.paper,\n                      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                        id: \"FighterB\",\n                        options: this.state.selectOptionsNames,\n                        getOptionLabel: option => option.Name,\n                        style: {\n                          width: 500\n                        },\n                        onChange: (event, value) => this.getFighterB(value) // sends Index of selected Item Fighter A\n                        ,\n                        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                          label: \"Fighters\",\n                          variant: \"outlined\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 453,\n                          columnNumber: 77\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 447,\n                        columnNumber: 50\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 445,\n                      columnNumber: 47\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 43\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(GridCol, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            p: 15,\n            children: /*#__PURE__*/_jsxDEV(Item, {\n              xs: 12,\n              lg: 12,\n              children: /*#__PURE__*/_jsxDEV(GridCol, {\n                justify: \"center\",\n                alignItems: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Item, {\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    elevation: 3,\n                    className: this.state.Response1 ? this.state.draw ? classes.draw : this.state.undWin ? classes.Win : classes.Loss : classes.root,\n                    children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n                      children: [/*#__PURE__*/_jsxDEV(CardActions, {\n                        children: /*#__PURE__*/_jsxDEV(CardContent, {\n                          children: /*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"h7\",\n                            component: \"h1\",\n                            children: \"Radar Chart\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 474,\n                            columnNumber: 49\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 473,\n                          columnNumber: 45\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 472,\n                        columnNumber: 41\n                      }, this), /*#__PURE__*/_jsxDEV(GridRow, {\n                        justify: \"center\",\n                        alignItems: \"center\",\n                        children: /*#__PURE__*/_jsxDEV(Item, {\n                          xs: 12,\n                          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                            width: 1200,\n                            height: 500,\n                            children: /*#__PURE__*/_jsxDEV(RadarChart, {\n                              cx: \"50%\",\n                              cy: \"45%\",\n                              outerRadius: \"85%\",\n                              data: data,\n                              children: [/*#__PURE__*/_jsxDEV(PolarGrid, {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 484,\n                                columnNumber: 51\n                              }, this), /*#__PURE__*/_jsxDEV(PolarAngleAxis, {\n                                dataKey: \"subject\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 485,\n                                columnNumber: 51\n                              }, this), /*#__PURE__*/_jsxDEV(PolarRadiusAxis, {\n                                angle: 40,\n                                domain: [0, 10]\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 486,\n                                columnNumber: 51\n                              }, this), /*#__PURE__*/_jsxDEV(Radar, {\n                                name: this.state.FighterA[0],\n                                dataKey: \"A\",\n                                stroke: \"#fc9992\",\n                                fill: \"#fc9992\",\n                                fillOpacity: 0.6\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 487,\n                                columnNumber: 51\n                              }, this), /*#__PURE__*/_jsxDEV(Radar, {\n                                name: this.state.FighterB[0],\n                                dataKey: \"B\",\n                                stroke: \"#a3eef0\",\n                                fill: \"#a3eef0\",\n                                fillOpacity: 0.6\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 488,\n                                columnNumber: 51\n                              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 489,\n                                columnNumber: 51\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 483,\n                              columnNumber: 49\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 482,\n                            columnNumber: 46\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 481,\n                          columnNumber: 41\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 480,\n                        columnNumber: 42\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 471,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 470,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 36\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            p: 10,\n            children: /*#__PURE__*/_jsxDEV(Item, {\n              xs: 12,\n              lg: 12,\n              children: /*#__PURE__*/_jsxDEV(GridCol, {\n                justify: \"center\",\n                alignItems: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Item, {\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    elevation: 3,\n                    className: this.state.Response1 ? this.state.draw ? classes.draw : this.state.undWin ? classes.Win : classes.Loss : classes.root,\n                    children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n                      children: [/*#__PURE__*/_jsxDEV(CardActions, {\n                        children: /*#__PURE__*/_jsxDEV(CardContent, {\n                          children: /*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"h7\",\n                            component: \"h1\",\n                            children: \"Bar Chart\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 510,\n                            columnNumber: 49\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 509,\n                          columnNumber: 45\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 508,\n                        columnNumber: 41\n                      }, this), /*#__PURE__*/_jsxDEV(GridRow, {\n                        justify: \"center\",\n                        alignItems: \"center\",\n                        children: /*#__PURE__*/_jsxDEV(Item, {\n                          xs: 12,\n                          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                            width: 1200,\n                            height: 500,\n                            children: /*#__PURE__*/_jsxDEV(BarChart, {\n                              width: 500,\n                              height: 300,\n                              data: data,\n                              stackOffset: \"sign\",\n                              margin: {\n                                top: 5,\n                                right: 30,\n                                left: 20,\n                                bottom: 5\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                                strokeDasharray: \"3 3\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 531,\n                                columnNumber: 51\n                              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                                dataKey: \"subject\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 532,\n                                columnNumber: 51\n                              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 533,\n                                columnNumber: 51\n                              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 534,\n                                columnNumber: 51\n                              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 535,\n                                columnNumber: 51\n                              }, this), /*#__PURE__*/_jsxDEV(ReferenceLine, {\n                                y: 0,\n                                stroke: \"#000\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 536,\n                                columnNumber: 51\n                              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                                dataKey: \"A\",\n                                stackId: \"a\",\n                                fill: \"#8884d8\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 537,\n                                columnNumber: 52\n                              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                                dataKey: \"B\",\n                                stackId: \"a\",\n                                fill: \"#82ca9d\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 538,\n                                columnNumber: 52\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 519,\n                              columnNumber: 49\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 518,\n                            columnNumber: 45\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 517,\n                          columnNumber: 41\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 516,\n                        columnNumber: 42\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 507,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 506,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 36\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 5\n    }, this);\n  }\n\n} // export default class ComboBox\n\n\nexport default withStyles(useStyle)(Statistics);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Grids\");\n$RefreshReg$(_c2, \"GridCol\");\n$RefreshReg$(_c3, \"GridRow\");\n$RefreshReg$(_c4, \"Item\");","map":{"version":3,"sources":["/home/roroblacc/Desktop/FYP/NEWFYP/ProfessorM.M.A/ReactWebApp/WebApp/arch-development/src/components/ui/statistics.js"],"names":["React","useEffect","useState","TextField","Autocomplete","axios","FighterData","Button","Grid","Paper","withStyles","Card","CardActions","CardContent","CardActionArea","Typography","Box","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","ReferenceLine","Radar","RadarChart","PolarGrid","Legend","PolarAngleAxis","PolarRadiusAxis","ResponsiveContainer","Chip","Grids","props","GridCol","GridRow","Item","useStyle","theme","toolbarMargin","mixins","toolbar","marginBottom","breakpoints","down","logo","width","height","paper","display","flexWrap","marginTop","spacing","margin","root","backgroundColor","minWidth","minHeight","Win","Loss","draw","bullet","transform","title","fontSize","pos","Statistics","PureComponent","constructor","state","selectOptionsNames","DOB","SApM","SLpM","REACH","STANCE","WEIGHT","strikeAccuracy","strDef","tdAcc","subAvg","tdDef","tdAvg","FighterA","FighterB","Response","Response1","Favourite","UnderDog","favWin","undWin","chart","charttwo","radarB","getFighterA","bind","getOptions","res","get","data","nameData","heightData","StrikeAcc","i","Name","undefined","push","HEIGHT","setState","componentDidMount","param","indexA","indexOf","radar_one","convertRange","value","min","max","length","Height","StrAcc","slice","concat","console","log","getFighterB","indexB","radar_two","render","classes","bull","subject","A","B","fullMark","marginLeft","option","event","params","top","right","left","bottom"],"mappings":"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","sourcesContent":["/* eslint-disable no-use-before-define */\nimport React,{useEffect,useState} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport axios from 'axios'\nimport FighterData from '../Data/fighterDataset.json'\nimport { Button } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box'\n// import { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip} from 'recharts';\nimport {\n  BarChart,\n  Bar,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ReferenceLine,\n} from 'recharts';\n\nimport { Radar, RadarChart, PolarGrid, Legend, PolarAngleAxis, PolarRadiusAxis, ResponsiveContainer } from 'recharts';\nimport Chip from '@material-ui/core/Chip';\n\n\n\n\n\n      // abstract Grid\n\n     const Grids = (props) => <Grid container {...props} />\n     const GridCol = (props) => <Grid container direction ='column'{...props} />\n     const GridRow = (props) => <Grid container direction ='row'{...props} />\n     const Item = (props) => <Grid item {...props} />\n\n\n\n\nconst useStyle = theme => ({\n  toolbarMargin: {\n    ...theme.mixins.toolbar,\n    marginBottom: \"1em\",\n    [theme.breakpoints.down(\"xs\")]:{\n      marginBottom: \"1.5em\",\n\n    },\n  },\n  logo: {\n    // height:\"100px\",\n    width: \"16em\",\n    [theme.breakpoints.down(\"md\")]:{\n      height: \"5em\",\n      width: \"17em\",\n    },\n    [theme.breakpoints.down(\"xs\")]:{\n      height: \"5.5em\",\n      width: \"19em\",\n\n    },\n\n  },\n  paper:{\n     display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n       marginTop:theme.spacing(200),\n      margin: theme.spacing(30),\n      width: theme.spacing(300),\n      height: theme.spacing(16)\n    }\n  },\n   root: {\n      backgroundColor: '#FAFAFA',\n    minWidth: 200,\n     minHeight:300,\n  },\n  Win: {\n      backgroundColor: '#BCE6DA',\n    minWidth: 200,\n     minHeight:300,\n  },\n Loss: {\n  backgroundColor:'#F0A89C',\nminWidth: 200,\n minHeight:300,\n},\n    draw:{\n        backgroundColor: '#F0E79C',\n        minWidth: 200,\n        minHeight:300,\n\n    },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\n\n\n\n\n\nclass Statistics extends React.PureComponent {\nconstructor(props){\n    super(props)\n    this.state = {\n      selectOptionsNames : [],\n      height: [],\n      DOB:[],\n      SApM:[],\n      SLpM:[],\n      REACH:[],\n      STANCE:[],\n      WEIGHT:[],\n      strikeAccuracy:[],\n      strDef:[],\n      tdAcc:[],\n      subAvg:[],\n      tdDef:[],\n      tdAvg:[],\n      FighterA:[],\n      FighterB:[],\n      Response:false,\n      Response1:false,\n      Favourite: '',\n      UnderDog: '',\n      favWin:false,\n      undWin:false,\n      draw:false,\n      chart:[],\n      charttwo:[],\n      radarB:false,\n\n      // fixedOptions:[\"hello\"],\n      // value:[...this.fixedOptions, this.FighterA]\n    }\n    this.getFighterA = this.getFighterA.bind(this);\n\n  }\n\n\n  async getOptions(){\n    const res = await axios.get('http://127.0.0.1:5000/static/fighterDataset2.json')\n    const data = res.data\n    const nameData =[]\n    const heightData =[]\n    const StrikeAcc =[]\n    const DOB =[]\n    const SApM =[]\n    const SLpM =[]\n    const REACH =[]\n    const STANCE =[]\n    const WEIGHT =[]\n    const strDef =[]\n    const tdAcc =[]\n    const subAvg =[]\n    const tdDef =[]\n    const tdAvg =[]\n\n\n    for(let i =0; i< 6000 ;i++){\n      // console.log(FighterData.Name[i])\n      if (FighterData.Name[i] !== undefined){\n        nameData.push({ \"Name\" : FighterData.Name[i]})\n        heightData.push({\"Height\": FighterData.HEIGHT[i]})\n        StrikeAcc.push({\"StrAcc\": FighterData[\"Str. Acc..\"][i]})\n        DOB.push({\"DOB\":FighterData.DOB[i]})\n        SApM.push({\"SApM\":FighterData.SApM[i]})\n        SLpM.push({\"SLpM\":FighterData.SLpM[i]})\n        REACH.push({\"REACH\":FighterData.REACH[i]})\n        STANCE.push({\"STANCE\":FighterData.STANCE[i]})\n        WEIGHT.push({\"WEIGHT\":FighterData.WEIGHT[i]})\n        strDef.push({\"strDef\":FighterData[\"Str. Def\"][i]})\n        tdAcc.push({\"tdAcc\":FighterData[\"TD Acc\"][i]})\n        subAvg.push({\"subAvg\":FighterData[\"Sub. Avg\"][i]})\n        tdDef.push({\"tdDef\":FighterData[\"TD Def.\"][i]})\n        tdAvg.push({\"tdAvg\":FighterData[\"TD Avg\"][i]})\n\n\n      }\n    }\n\n    this.setState({selectOptionsNames: nameData})\n    this.setState({height: heightData})\n    this.setState({strikeAccuracy: StrikeAcc})\n    this.setState({DOB: DOB})\n    this.setState({SLpM: SLpM})\n    this.setState({REACH: REACH})\n    this.setState({STANCE: STANCE})\n    this.setState({WEIGHT: WEIGHT})\n    this.setState({strDef: strDef})\n    this.setState({tdAcc: tdAcc})\n    this.setState({subAvg: subAvg})\n    this.setState({tdDef: tdDef})\n    this.setState({tdAvg: tdAvg})\n    this.setState({SApM: SApM})\n\n\n\n\n  }\n    componentDidMount(){\n      this.getOptions()\n  }\n\n\n\n  getFighterA(param){\n    const indexA = this.state.selectOptionsNames.indexOf(param);\n    const FighterA=[]\n    let radar_one = []\n\n\n         const convertRange =( value, min , max) => {\n\n                for (let i = 0; i < value[0].length; i++)\n                {\n                    if(max - min === 0) return 1;\n                    value[0][i] = (value[0][i] - min) / (max - min);\n\n                }\n                return value[0];\n            };\n\n\n    if(indexA !== -1 ){\n      // this.setState({FighterA:[]}) // reset array before setting new data\n      FighterA.push(this.state.selectOptionsNames[indexA].Name)\n      FighterA.push(this.state.height[indexA].Height)\n      FighterA.push(this.state.WEIGHT[indexA].WEIGHT)\n      FighterA.push(this.state.REACH[indexA].REACH)\n      FighterA.push(this.state.STANCE[indexA].STANCE)\n      FighterA.push(this.state.DOB[indexA].DOB)\n      FighterA.push(this.state.SLpM[indexA].SLpM)\n      FighterA.push(this.state.strikeAccuracy[indexA].StrAcc)\n      FighterA.push(this.state.SApM[indexA].SApM)\n      FighterA.push(this.state.strDef[indexA].strDef)\n      FighterA.push(this.state.tdAvg[indexA].tdAvg)\n      FighterA.push(this.state.tdAcc[indexA].tdAcc)\n      FighterA.push(this.state.tdDef[indexA].tdDef)\n      FighterA.push(this.state.subAvg[indexA].subAvg)\n\n       radar_one.push(FighterA.slice(1,2).concat(FighterA.slice(3 ,4)).concat(FighterA.slice(6,13)));\n        console.log(\"radarone \" ,radar_one)\n        radar_one[0][0] = radar_one[0][0] * 30\n        radar_one[0][2] = radar_one[0][2] * 10\n        radar_one[0][4] = radar_one[0][4] * 10\n        radar_one[0][6] = radar_one[0][6] * 10\n\n            let chart = convertRange(radar_one ,2 ,10)\n            this.setState({chart:chart});\n\n\n    }else{\n            this.setState({chart:radar_one});\n            this.setState({FighterB:FighterA});\n    }\n\n    // console.log(\"Chart\",chart)\n    this.setState({FighterA:FighterA})\n    this.setState({Response:false});\n    this.setState({undWin:false});\n    this.setState({draw:false});\n  }\n\n    getFighterB(param){\n    const indexB = this.state.selectOptionsNames.indexOf(param);\n    const FighterB=[]\n    let radar_two = []\n\n     const convertRange =( value, min , max) => {\n\n            for (let i = 0; i < value[0].length; i++)\n            {\n                if(max - min === 0) return 1;\n                value[0][i] = (value[0][i] - min) / (max - min);\n\n            }\n            return value[0];\n        };\n\n    if(indexB!== -1 ){\n      // this.setState({FighterB:[]}) // reset array before setting new data\n      FighterB.push(this.state.selectOptionsNames[indexB].Name)\n      FighterB.push(this.state.height[indexB].Height)\n      FighterB.push(this.state.WEIGHT[indexB].WEIGHT)\n      FighterB.push(this.state.REACH[indexB].REACH)\n      FighterB.push(this.state.STANCE[indexB].STANCE)\n      FighterB.push(this.state.DOB[indexB].DOB)\n      FighterB.push(this.state.SLpM[indexB].SLpM)\n      FighterB.push(this.state.strikeAccuracy[indexB].StrAcc)\n      FighterB.push(this.state.SApM[indexB].SApM)\n      FighterB.push(this.state.strDef[indexB].strDef)\n      FighterB.push(this.state.tdAvg[indexB].tdAvg)\n      FighterB.push(this.state.tdAcc[indexB].tdAcc)\n      FighterB.push(this.state.tdDef[indexB].tdDef)\n      FighterB.push(this.state.subAvg[indexB].subAvg)\n\n\n        radar_two.push(FighterB.slice(1,2).concat(FighterB.slice(3 ,4)).concat(FighterB.slice(6,13)));\n        console.log(\"Radar Two \" ,radar_two)\n        radar_two[0][0] = radar_two[0][0] * 30\n        radar_two[0][2] = radar_two[0][2] * 10\n        radar_two[0][4] = radar_two[0][4] * 10\n        radar_two[0][6] = radar_two[0][6] * 10\n\n            let chart = convertRange(radar_two ,2 ,10)\n            this.setState({charttwo:chart});\n\n    }\n    else{\n            this.setState({charttwo:radar_two});\n            this.setState({FighterB:FighterB});\n    }\n\n        this.setState({FighterB:FighterB});\n\n\n  }\n\n\n     // const Grids = (props) => <Grid container {...props} />\n     // const GridCol = (props) => <Grid container direction ='column'{...props} />\n     // const GridRow = (props) => <Grid container direction ='row'{...props} />\n     // const Item = (props) => <Grid item {...props} />\n\n\n  render(){\n    const { classes } = this.props;\n    const bull = <span className={classes.bullet}>•</span>;\n    const data = [\n  {\n    subject: 'HEIGHT',\n    A: this.state.chart[0],\n    B: this.state.charttwo[0],\n    fullMark: 20,\n  },\n\n  {\n    subject: 'REACH',\n    A: this.state.chart[1],\n    B: this.state.charttwo[1],\n    fullMark: 10,\n  },\n  {\n    subject: 'Strike Landed Per Min',\n    A: this.state.chart[2],\n    B: this.state.charttwo[2],\n    fullMark: 10,\n  },\n  {\n    subject: 'Strike Acc',\n    A: this.state.chart[3],\n    B: this.state.charttwo[3],\n    fullMark: 10,\n  },\n  {\n    subject: 'Strike Absorbed Per Min',\n    A: this.state.chart[4],\n    B: this.state.charttwo[4],\n    fullMark: 10,\n  },\n {\n    subject: 'Strike Def',\n    A: this.state.chart[5],\n    B: this.state.charttwo[5],\n    fullMark: 10,\n  },\n {\n    subject: 'Takedown Avg',\n    A: this.state.chart[6],\n    B: this.state.charttwo[6],\n    fullMark: 10,\n  }, {\n    subject: 'Takedown Acc',\n    A: this.state.chart[7],\n    B: this.state.charttwo[7],\n    fullMark: 10,\n  }, {\n    subject: 'Takedown Def',\n    A: this.state.chart[8],\n    B: this.state.charttwo[8],\n    fullMark: 10,\n  },\n  //       {\n  //   subject: 'Submission Avg',\n  //   A: this.state.chart[8],\n  //   B: 0,\n  //   fullMark: 10,\n  // },\n\n];\n\n    return (\n\n    <React.Fragment>\n       <Box p={5}>\n           <GridRow>\n               <GridRow  >\n\n                      <GridRow spacing={10}>\n\n                                <GridRow xs={6} justify=\"flex-end\" alignItems=\"center\">\n                                    <Item styles={{marginLeft:2000}}>\n\n\n                                      <Box p={1.5}>\n                                          <Paper  styles={classes.paper}>\n\n                                             <Autocomplete\n                                              id=\"FighterA\"\n                                              options={this.state.selectOptionsNames}\n                                              getOptionLabel={(option) => option.Name}\n                                              style={{ width: 500 }}\n                                              onChange={(event, value) => this.getFighterA(value)} // sends Index of selected Item Fighter A\n                                              renderInput={(params ) => <TextField {...params}  label=\"Fighters\" variant=\"outlined\" />}\n                                            />\n\n                                        </Paper>\n                                      </Box>\n                                    </Item>\n                                </GridRow>\n\n\n                                <GridRow xs={6}  justify=\"flex-start\" alignItems=\"center\" >\n                                    <Item >\n\n\n                                          <Box p={1.5}>\n                                              <Paper  styles={classes.paper}>\n\n                                                 <Autocomplete\n                                                  id=\"FighterB\"\n                                                  options={this.state.selectOptionsNames}\n                                                  getOptionLabel={(option) => option.Name}\n                                                  style={{ width: 500 }}\n                                                  onChange={(event, value) => this.getFighterB(value)} // sends Index of selected Item Fighter A\n                                                  renderInput={(params ) => <TextField {...params}  label=\"Fighters\" variant=\"outlined\" />}\n                                                />\n\n                                            </Paper>\n                                          </Box>\n                                    </Item>\n                                </GridRow>\n                      </GridRow>\n                </GridRow>\n           </GridRow>\n\n           <GridCol>\n\n                  <Box p={15}>\n                      <Item xs={12} lg={12}>\n                               <GridCol  justify=\"center\" alignItems=\"center\">\n                                   <Item>\n                                        <Card elevation={3} className={this.state.Response1?  this.state.draw ?  classes.draw : this.state.undWin ? classes.Win: classes.Loss : classes.root}>\n                                    <CardActionArea>\n                                        <CardActions>\n                                            <CardContent>\n                                                <Typography variant=\"h7\" component=\"h1\">\n                                                   Radar Chart\n                                                 </Typography>\n\n                                            </CardContent>\n                                        </CardActions>\n                                         <GridRow justify=\"center\" alignItems=\"center\">\n                                        <Item xs={12}>\n                                             <ResponsiveContainer width={1200} height={500}>\n                                                <RadarChart cx=\"50%\" cy=\"45%\" outerRadius=\"85%\" data={data}>\n                                                  <PolarGrid />\n                                                  <PolarAngleAxis dataKey=\"subject\" />\n                                                  <PolarRadiusAxis angle={40} domain={[0, 10]} />\n                                                  <Radar name={this.state.FighterA[0]} dataKey=\"A\" stroke=\"#fc9992\" fill=\"#fc9992\" fillOpacity={0.6} />\n                                                  <Radar  name={this.state.FighterB[0]} dataKey=\"B\" stroke=\"#a3eef0\" fill=\"#a3eef0\" fillOpacity={0.6} />\n                                                  <Legend />\n                                                </RadarChart>\n                                            </ResponsiveContainer>\n                                        </Item>\n                                     </GridRow>\n                                    </CardActionArea>\n                                </Card>\n                                   </Item>\n\n                               </GridCol>\n                      </Item>\n                  </Box>\n\n                  <Box p={10}>\n                      <Item xs={12} lg={12}>\n                               <GridCol  justify=\"center\" alignItems=\"center\">\n                                   <Item>\n                                        <Card  elevation={3} className={this.state.Response1?  this.state.draw ?  classes.draw : this.state.undWin ? classes.Win: classes.Loss : classes.root}>\n                                    <CardActionArea>\n                                        <CardActions>\n                                            <CardContent>\n                                                <Typography variant=\"h7\" component=\"h1\">\n                                                   Bar Chart\n                                                 </Typography>\n\n                                            </CardContent>\n                                        </CardActions>\n                                         <GridRow justify=\"center\" alignItems=\"center\">\n                                        <Item xs={12}>\n                                            <ResponsiveContainer width={1200} height={500}>\n                                                <BarChart\n                                                  width={500}\n                                                  height={300}\n                                                  data={data}\n                                                  stackOffset=\"sign\"\n                                                  margin={{\n                                                    top: 5,\n                                                    right: 30,\n                                                    left: 20,\n                                                    bottom: 5,\n                                                  }}\n                                                >\n                                                  <CartesianGrid strokeDasharray=\"3 3\" />\n                                                  <XAxis dataKey=\"subject\" />\n                                                  <YAxis />\n                                                  <Tooltip />\n                                                  <Legend />\n                                                  <ReferenceLine y={0} stroke=\"#000\" />\n                                                   <Bar dataKey=\"A\" stackId=\"a\" fill=\"#8884d8\" />\n                                                   <Bar dataKey=\"B\" stackId=\"a\" fill=\"#82ca9d\" />\n                                                </BarChart>\n                                            </ResponsiveContainer>\n                                        </Item>\n                                     </GridRow>\n                                    </CardActionArea>\n                                </Card>\n                                   </Item>\n\n                               </GridCol>\n                      </Item>\n                  </Box>\n\n\n\n            </GridCol>\n\n       </Box>\n\n    </React.Fragment>\n\n  );\n  }\n}\n\n\n\n// export default class ComboBox\nexport default withStyles(useStyle)(Statistics)\n\n"]},"metadata":{},"sourceType":"module"}